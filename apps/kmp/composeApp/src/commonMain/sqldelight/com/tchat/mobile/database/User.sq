-- Users table for authentication and core user data
CREATE TABLE IF NOT EXISTS users (
    id TEXT PRIMARY KEY NOT NULL,
    email TEXT UNIQUE NOT NULL,
    phone TEXT UNIQUE,
    created_at INTEGER NOT NULL,
    updated_at INTEGER NOT NULL,
    is_active INTEGER NOT NULL DEFAULT 1,
    email_verified INTEGER NOT NULL DEFAULT 0,
    phone_verified INTEGER NOT NULL DEFAULT 0
);

-- Indexes for performance
CREATE INDEX IF NOT EXISTS users_email_idx ON users(email);
CREATE INDEX IF NOT EXISTS users_phone_idx ON users(phone);
CREATE INDEX IF NOT EXISTS users_is_active_idx ON users(is_active);

-- Basic user queries
getUserById:
SELECT * FROM users WHERE id = ?;

getUserByEmail:
SELECT * FROM users WHERE email = ?;

getUserByPhone:
SELECT * FROM users WHERE phone = ?;

insertUser:
INSERT INTO users (id, email, phone, created_at, updated_at, is_active, email_verified, phone_verified)
VALUES (?, ?, ?, ?, ?, ?, ?, ?);

updateUser:
UPDATE users
SET email = ?, phone = ?, updated_at = ?, email_verified = ?, phone_verified = ?
WHERE id = ?;

updateUserActiveStatus:
UPDATE users
SET is_active = ?, updated_at = ?
WHERE id = ?;

deleteUser:
UPDATE users
SET is_active = 0, updated_at = ?
WHERE id = ?;

getAllActiveUsers:
SELECT * FROM users WHERE is_active = 1 ORDER BY created_at DESC;

getUserCount:
SELECT COUNT(*) FROM users WHERE is_active = 1;