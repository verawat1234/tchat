{
  "config": {
    "configFile": "/Users/weerawat/Tchat/apps/web/playwright.config.ts",
    "rootDir": "/Users/weerawat/Tchat/apps/web/tests/e2e",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 4
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        null
      ],
      [
        "json",
        {
          "outputFile": "test-results.json"
        }
      ],
      [
        "junit",
        {
          "outputFile": "junit.xml"
        }
      ],
      [
        "list",
        null
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/Users/weerawat/Tchat/apps/web/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "chromium",
        "name": "chromium",
        "testDir": "/Users/weerawat/Tchat/apps/web/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "/Users/weerawat/Tchat/apps/web/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "firefox",
        "name": "firefox",
        "testDir": "/Users/weerawat/Tchat/apps/web/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "/Users/weerawat/Tchat/apps/web/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "webkit",
        "name": "webkit",
        "testDir": "/Users/weerawat/Tchat/apps/web/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "/Users/weerawat/Tchat/apps/web/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "Mobile Chrome",
        "name": "Mobile Chrome",
        "testDir": "/Users/weerawat/Tchat/apps/web/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "/Users/weerawat/Tchat/apps/web/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "Mobile Safari",
        "name": "Mobile Safari",
        "testDir": "/Users/weerawat/Tchat/apps/web/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "/Users/weerawat/Tchat/apps/web/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "Microsoft Edge",
        "name": "Microsoft Edge",
        "testDir": "/Users/weerawat/Tchat/apps/web/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "/Users/weerawat/Tchat/apps/web/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "Google Chrome",
        "name": "Google Chrome",
        "testDir": "/Users/weerawat/Tchat/apps/web/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.55.0",
    "workers": 4,
    "webServer": {
      "command": "npm run dev",
      "url": "http://localhost:3000",
      "reuseExistingServer": true,
      "timeout": 120000
    }
  },
  "suites": [
    {
      "title": "content-contract.spec.ts",
      "file": "content-contract.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Content Service Contract Validation",
          "file": "content-contract.spec.ts",
          "line": 10,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "Response Structure Contract",
              "file": "content-contract.spec.ts",
              "line": 13,
              "column": 8,
              "specs": [
                {
                  "title": "should return correct response structure for content list",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 0,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 493,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"auth.app.title\", \"created_at\": \"2025-09-22T22:47:44.814462+07:00\", \"id\": \"3076dfee-a100-4dfe-8941-dfd40d5f9227\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:47:44.814462+07:00\", \"value\": {\"text\": \"Tchat Application\"}}, {\"category\": \"navigation\", \"created_at\": \"2025-09-22T22:03:36.859946+07:00\", \"id\": \"3ffc8c8c-14cd-4c79-9ce0-27f31503e021\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:03:36.859946+07:00\", \"value\": {\"text\": \"Home\"}}], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 2}, \"total\": 2}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"auth.app.title\", \"created_at\": \"2025-09-22T22:47:44.814462+07:00\", \"id\": \"3076dfee-a100-4dfe-8941-dfd40d5f9227\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:47:44.814462+07:00\", \"value\": {\"text\": \"Tchat Application\"}}, {\"category\": \"navigation\", \"created_at\": \"2025-09-22T22:03:36.859946+07:00\", \"id\": \"3ffc8c8c-14cd-4c79-9ce0-27f31503e021\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:03:36.859946+07:00\", \"value\": {\"text\": \"Home\"}}], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 2}, \"total\": 2}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:41:27",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 27,
                              "line": 41
                            },
                            "snippet": "  39 |         expect(data.data).toHaveProperty('items');\n  40 |         expect(data.data).toHaveProperty('total');\n> 41 |         expect(data.data).toHaveProperty('page');\n     |                           ^\n  42 |         expect(data.data).toHaveProperty('limit');\n  43 |         expect(Array.isArray(data.data.items)).toBe(true);\n  44 |       }"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 27,
                                "line": 41
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"auth.app.title\", \"created_at\": \"2025-09-22T22:47:44.814462+07:00\", \"id\": \"3076dfee-a100-4dfe-8941-dfd40d5f9227\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:47:44.814462+07:00\", \"value\": {\"text\": \"Tchat Application\"}}, {\"category\": \"navigation\", \"created_at\": \"2025-09-22T22:03:36.859946+07:00\", \"id\": \"3ffc8c8c-14cd-4c79-9ce0-27f31503e021\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:03:36.859946+07:00\", \"value\": {\"text\": \"Home\"}}], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 2}, \"total\": 2}\u001b[39m\n\n  39 |         expect(data.data).toHaveProperty('items');\n  40 |         expect(data.data).toHaveProperty('total');\n> 41 |         expect(data.data).toHaveProperty('page');\n     |                           ^\n  42 |         expect(data.data).toHaveProperty('limit');\n  43 |         expect(Array.isArray(data.data.items)).toBe(true);\n  44 |       }\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:41:27"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:16.762Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 27,
                            "line": 41
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-77818f2d97e96d6a51ff",
                  "file": "content-contract.spec.ts",
                  "line": 14,
                  "column": 9
                },
                {
                  "title": "should return correct structure for single content item",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 1,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 492,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:16.887Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-e13fc71eb656266b5d45",
                  "file": "content-contract.spec.ts",
                  "line": 47,
                  "column": 9
                },
                {
                  "title": "should validate content value structure by type",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 2,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 598,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:16.823Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-defedbc8799829ea2476",
                  "file": "content-contract.spec.ts",
                  "line": 93,
                  "column": 9
                },
                {
                  "title": "should return correct response structure for content list",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 6,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 375,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:52:17.512216+07:00\", \"id\": \"5ae53f38-6060-413e-be66-f42613848ee1\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.512216+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, {\"category\": \"navigation.main.title\", \"created_at\": \"2025-09-22T22:52:17.462386+07:00\", \"id\": \"e3ff62ad-1877-46d2-906e-2ce2b43ea68e\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.462386+07:00\", \"value\": {\"text\": \"Content 3\"}}, {\"category\": \"uuid.string.test\", \"created_at\": \"2025-09-22T22:52:17.456023+07:00\", \"id\": \"19be419f-99b2-4531-8efe-59dce7aaf185\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.456023+07:00\", \"value\": {\"text\": \"Test content for UUID/string compatibility\"}}, {\"category\": \"auth.signup.title\", \"created_at\": \"2025-09-22T22:52:17.443002+07:00\", \"id\": \"7990673c-7cc4-4acf-8adf-e071f2f99747\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.443002+07:00\", \"value\": {\"text\": \"Content 2\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:17.428705+07:00\", \"id\": \"f6fb1f48-f2e4-45bd-9b15-9b8f2cfca5e6\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.428705+07:00\", \"value\": {\"text\": \"Content 1\"}}, {\"category\": \"contract.type.json\", \"created_at\": \"2025-09-22T22:52:17.400131+07:00\", \"id\": \"b389e8d0-18e0-4f71-97a5-5bc6cd7d48fb\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:17.400131+07:00\", \"value\": {\"data\": {\"key\": \"value\", \"number\": 42}}}, {\"category\": \"contract.type.html\", \"created_at\": \"2025-09-22T22:52:17.359371+07:00\", \"id\": \"77804352-a25b-4ede-ba05-f395aa0542a0\", \"metadata\": null, \"status\": \"published\", \"type\": \"html\", \"updated_at\": \"2025-09-22T22:52:17.359371+07:00\", \"value\": {\"html\": \"<p>Sample HTML content</p>\"}}, {\"category\": \"contract.test.item\", \"created_at\": \"2025-09-22T22:52:17.255952+07:00\", \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\", \"value\": {\"text\": \"Contract test content\"}}, {\"category\": \"contract.type.text\", \"created_at\": \"2025-09-22T22:52:17.224077+07:00\", \"id\": \"8452633d-5f1a-444c-b587-c9f0c8a546a0\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.224077+07:00\", \"value\": {\"text\": \"Sample text content\"}}, {\"category\": \"auth.app.title\", \"created_at\": \"2025-09-22T22:47:44.814462+07:00\", \"id\": \"3076dfee-a100-4dfe-8941-dfd40d5f9227\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:47:44.814462+07:00\", \"value\": {\"text\": \"Tchat Application\"}}, …], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 11}, \"total\": 11}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:52:17.512216+07:00\", \"id\": \"5ae53f38-6060-413e-be66-f42613848ee1\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.512216+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, {\"category\": \"navigation.main.title\", \"created_at\": \"2025-09-22T22:52:17.462386+07:00\", \"id\": \"e3ff62ad-1877-46d2-906e-2ce2b43ea68e\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.462386+07:00\", \"value\": {\"text\": \"Content 3\"}}, {\"category\": \"uuid.string.test\", \"created_at\": \"2025-09-22T22:52:17.456023+07:00\", \"id\": \"19be419f-99b2-4531-8efe-59dce7aaf185\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.456023+07:00\", \"value\": {\"text\": \"Test content for UUID/string compatibility\"}}, {\"category\": \"auth.signup.title\", \"created_at\": \"2025-09-22T22:52:17.443002+07:00\", \"id\": \"7990673c-7cc4-4acf-8adf-e071f2f99747\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.443002+07:00\", \"value\": {\"text\": \"Content 2\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:17.428705+07:00\", \"id\": \"f6fb1f48-f2e4-45bd-9b15-9b8f2cfca5e6\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.428705+07:00\", \"value\": {\"text\": \"Content 1\"}}, {\"category\": \"contract.type.json\", \"created_at\": \"2025-09-22T22:52:17.400131+07:00\", \"id\": \"b389e8d0-18e0-4f71-97a5-5bc6cd7d48fb\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:17.400131+07:00\", \"value\": {\"data\": {\"key\": \"value\", \"number\": 42}}}, {\"category\": \"contract.type.html\", \"created_at\": \"2025-09-22T22:52:17.359371+07:00\", \"id\": \"77804352-a25b-4ede-ba05-f395aa0542a0\", \"metadata\": null, \"status\": \"published\", \"type\": \"html\", \"updated_at\": \"2025-09-22T22:52:17.359371+07:00\", \"value\": {\"html\": \"<p>Sample HTML content</p>\"}}, {\"category\": \"contract.test.item\", \"created_at\": \"2025-09-22T22:52:17.255952+07:00\", \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\", \"value\": {\"text\": \"Contract test content\"}}, {\"category\": \"contract.type.text\", \"created_at\": \"2025-09-22T22:52:17.224077+07:00\", \"id\": \"8452633d-5f1a-444c-b587-c9f0c8a546a0\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.224077+07:00\", \"value\": {\"text\": \"Sample text content\"}}, {\"category\": \"auth.app.title\", \"created_at\": \"2025-09-22T22:47:44.814462+07:00\", \"id\": \"3076dfee-a100-4dfe-8941-dfd40d5f9227\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:47:44.814462+07:00\", \"value\": {\"text\": \"Tchat Application\"}}, …], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 11}, \"total\": 11}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:41:27",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 27,
                              "line": 41
                            },
                            "snippet": "  39 |         expect(data.data).toHaveProperty('items');\n  40 |         expect(data.data).toHaveProperty('total');\n> 41 |         expect(data.data).toHaveProperty('page');\n     |                           ^\n  42 |         expect(data.data).toHaveProperty('limit');\n  43 |         expect(Array.isArray(data.data.items)).toBe(true);\n  44 |       }"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 27,
                                "line": 41
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:52:17.512216+07:00\", \"id\": \"5ae53f38-6060-413e-be66-f42613848ee1\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.512216+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, {\"category\": \"navigation.main.title\", \"created_at\": \"2025-09-22T22:52:17.462386+07:00\", \"id\": \"e3ff62ad-1877-46d2-906e-2ce2b43ea68e\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.462386+07:00\", \"value\": {\"text\": \"Content 3\"}}, {\"category\": \"uuid.string.test\", \"created_at\": \"2025-09-22T22:52:17.456023+07:00\", \"id\": \"19be419f-99b2-4531-8efe-59dce7aaf185\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.456023+07:00\", \"value\": {\"text\": \"Test content for UUID/string compatibility\"}}, {\"category\": \"auth.signup.title\", \"created_at\": \"2025-09-22T22:52:17.443002+07:00\", \"id\": \"7990673c-7cc4-4acf-8adf-e071f2f99747\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.443002+07:00\", \"value\": {\"text\": \"Content 2\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:17.428705+07:00\", \"id\": \"f6fb1f48-f2e4-45bd-9b15-9b8f2cfca5e6\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.428705+07:00\", \"value\": {\"text\": \"Content 1\"}}, {\"category\": \"contract.type.json\", \"created_at\": \"2025-09-22T22:52:17.400131+07:00\", \"id\": \"b389e8d0-18e0-4f71-97a5-5bc6cd7d48fb\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:17.400131+07:00\", \"value\": {\"data\": {\"key\": \"value\", \"number\": 42}}}, {\"category\": \"contract.type.html\", \"created_at\": \"2025-09-22T22:52:17.359371+07:00\", \"id\": \"77804352-a25b-4ede-ba05-f395aa0542a0\", \"metadata\": null, \"status\": \"published\", \"type\": \"html\", \"updated_at\": \"2025-09-22T22:52:17.359371+07:00\", \"value\": {\"html\": \"<p>Sample HTML content</p>\"}}, {\"category\": \"contract.test.item\", \"created_at\": \"2025-09-22T22:52:17.255952+07:00\", \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\", \"value\": {\"text\": \"Contract test content\"}}, {\"category\": \"contract.type.text\", \"created_at\": \"2025-09-22T22:52:17.224077+07:00\", \"id\": \"8452633d-5f1a-444c-b587-c9f0c8a546a0\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:17.224077+07:00\", \"value\": {\"text\": \"Sample text content\"}}, {\"category\": \"auth.app.title\", \"created_at\": \"2025-09-22T22:47:44.814462+07:00\", \"id\": \"3076dfee-a100-4dfe-8941-dfd40d5f9227\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:47:44.814462+07:00\", \"value\": {\"text\": \"Tchat Application\"}}, …], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 11}, \"total\": 11}\u001b[39m\n\n  39 |         expect(data.data).toHaveProperty('items');\n  40 |         expect(data.data).toHaveProperty('total');\n> 41 |         expect(data.data).toHaveProperty('page');\n     |                           ^\n  42 |         expect(data.data).toHaveProperty('limit');\n  43 |         expect(Array.isArray(data.data.items)).toBe(true);\n  44 |       }\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:41:27"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:18.546Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 27,
                            "line": 41
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-0356256edccc0cb472fc",
                  "file": "content-contract.spec.ts",
                  "line": 14,
                  "column": 9
                },
                {
                  "title": "should return correct structure for single content item",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 7,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 416,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"category\": \"contract.test.item\",\u001b[22m\n\u001b[32m-   \"created_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[32m-   \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\",\u001b[39m\n\u001b[31m+   \"created_at\": \"2025-09-22T22:52:18.937249+07:00\",\u001b[39m\n\u001b[31m+   \"id\": \"dbea6ad9-460b-4bbb-8bbf-1425d1050d1b\",\u001b[39m\n\u001b[2m    \"metadata\": null,\u001b[22m\n\u001b[2m    \"status\": \"published\",\u001b[22m\n\u001b[2m    \"type\": \"text\",\u001b[22m\n\u001b[32m-   \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[31m+   \"updated_at\": \"2025-09-22T22:52:18.937249+07:00\",\u001b[39m\n\u001b[2m    \"value\": Object {\u001b[22m\n\u001b[2m      \"text\": \"Contract test content\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"category\": \"contract.test.item\",\u001b[22m\n\u001b[32m-   \"created_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[32m-   \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\",\u001b[39m\n\u001b[31m+   \"created_at\": \"2025-09-22T22:52:18.937249+07:00\",\u001b[39m\n\u001b[31m+   \"id\": \"dbea6ad9-460b-4bbb-8bbf-1425d1050d1b\",\u001b[39m\n\u001b[2m    \"metadata\": null,\u001b[22m\n\u001b[2m    \"status\": \"published\",\u001b[22m\n\u001b[2m    \"type\": \"text\",\u001b[22m\n\u001b[32m-   \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[31m+   \"updated_at\": \"2025-09-22T22:52:18.937249+07:00\",\u001b[39m\n\u001b[2m    \"value\": Object {\u001b[22m\n\u001b[2m      \"text\": \"Contract test content\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:90:32",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 32,
                              "line": 90
                            },
                            "snippet": "  88 |\n  89 |       // Both responses should have identical structure\n> 90 |       expect(getByIdData.data).toEqual(getByKeyData.data);\n     |                                ^\n  91 |     });\n  92 |\n  93 |     test('should validate content value structure by type', async ({ request }) => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 32,
                                "line": 90
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"category\": \"contract.test.item\",\u001b[22m\n\u001b[32m-   \"created_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[32m-   \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\",\u001b[39m\n\u001b[31m+   \"created_at\": \"2025-09-22T22:52:18.937249+07:00\",\u001b[39m\n\u001b[31m+   \"id\": \"dbea6ad9-460b-4bbb-8bbf-1425d1050d1b\",\u001b[39m\n\u001b[2m    \"metadata\": null,\u001b[22m\n\u001b[2m    \"status\": \"published\",\u001b[22m\n\u001b[2m    \"type\": \"text\",\u001b[22m\n\u001b[32m-   \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[31m+   \"updated_at\": \"2025-09-22T22:52:18.937249+07:00\",\u001b[39m\n\u001b[2m    \"value\": Object {\u001b[22m\n\u001b[2m      \"text\": \"Contract test content\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m\n\n  88 |\n  89 |       // Both responses should have identical structure\n> 90 |       expect(getByIdData.data).toEqual(getByKeyData.data);\n     |                                ^\n  91 |     });\n  92 |\n  93 |     test('should validate content value structure by type', async ({ request }) => {\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:90:32"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:18.569Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 32,
                            "line": 90
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-5220ae108982adc3079d",
                  "file": "content-contract.spec.ts",
                  "line": 47,
                  "column": 9
                },
                {
                  "title": "should validate content value structure by type",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 9,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 551,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:20.422Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-70c3352f62171dfab500",
                  "file": "content-contract.spec.ts",
                  "line": 93,
                  "column": 9
                },
                {
                  "title": "should return correct response structure for content list",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 14,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 563,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:52:22.603336+07:00\", \"id\": \"c0c1d6c4-9c97-482e-b288-afaa4642f1b2\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:22.603336+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, {\"category\": \"navigation.main.title\", \"created_at\": \"2025-09-22T22:52:22.527134+07:00\", \"id\": \"24c5173b-7546-4f9e-845a-4e4fa67f6386\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:22.527134+07:00\", \"value\": {\"text\": \"Content 3\"}}, {\"category\": \"auth.signup.title\", \"created_at\": \"2025-09-22T22:52:22.512321+07:00\", \"id\": \"62260bfc-2f8e-4e2c-9f36-724310b8aafa\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:22.512321+07:00\", \"value\": {\"text\": \"Content 2\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:22.476201+07:00\", \"id\": \"f89b1400-5a77-4c97-8d98-88a452e6c58d\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:22.476201+07:00\", \"value\": {\"text\": \"Content 1\"}}, {\"category\": \"uuid.string.test\", \"created_at\": \"2025-09-22T22:52:21.048318+07:00\", \"id\": \"6caac246-e211-4f13-a5d6-305a7bb847ca\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:21.048318+07:00\", \"value\": {\"text\": \"Test content for UUID/string compatibility\"}}, {\"category\": \"contract.type.json\", \"created_at\": \"2025-09-22T22:52:20.936084+07:00\", \"id\": \"e9f5a5e1-ff69-4b15-b0d1-567b5f1f2fb8\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:20.936084+07:00\", \"value\": {\"data\": {\"key\": \"value\", \"number\": 42}}}, {\"category\": \"contract.type.html\", \"created_at\": \"2025-09-22T22:52:20.90109+07:00\", \"id\": \"acf810f0-8eac-46eb-bdf9-8491e5a4b1ca\", \"metadata\": null, \"status\": \"published\", \"type\": \"html\", \"updated_at\": \"2025-09-22T22:52:20.90109+07:00\", \"value\": {\"html\": \"<p>Sample HTML content</p>\"}}, {\"category\": \"contract.type.text\", \"created_at\": \"2025-09-22T22:52:20.848052+07:00\", \"id\": \"f164fcc9-52d7-4629-a7d8-e9ee968f08a7\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:20.848052+07:00\", \"value\": {\"text\": \"Sample text content\"}}, {\"category\": \"navigation.menu.items\", \"created_at\": \"2025-09-22T22:52:20.320704+07:00\", \"id\": \"09475772-4180-40a3-a9b9-f35bec84e42e\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:20.320704+07:00\", \"value\": {\"data\": [{\"label\": \"Home\", \"path\": \"/\"}, {\"label\": \"About\", \"path\": \"/about\"}]}}, {\"category\": \"auth.signin.subtitle\", \"created_at\": \"2025-09-22T22:52:20.308581+07:00\", \"id\": \"18f0c4c1-c39a-439c-970c-ccc864229fe5\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:20.308581+07:00\", \"value\": {\"text\": \"Welcome back to Tchat\"}}, …], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 23}, \"total\": 23}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:52:22.603336+07:00\", \"id\": \"c0c1d6c4-9c97-482e-b288-afaa4642f1b2\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:22.603336+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, {\"category\": \"navigation.main.title\", \"created_at\": \"2025-09-22T22:52:22.527134+07:00\", \"id\": \"24c5173b-7546-4f9e-845a-4e4fa67f6386\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:22.527134+07:00\", \"value\": {\"text\": \"Content 3\"}}, {\"category\": \"auth.signup.title\", \"created_at\": \"2025-09-22T22:52:22.512321+07:00\", \"id\": \"62260bfc-2f8e-4e2c-9f36-724310b8aafa\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:22.512321+07:00\", \"value\": {\"text\": \"Content 2\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:22.476201+07:00\", \"id\": \"f89b1400-5a77-4c97-8d98-88a452e6c58d\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:22.476201+07:00\", \"value\": {\"text\": \"Content 1\"}}, {\"category\": \"uuid.string.test\", \"created_at\": \"2025-09-22T22:52:21.048318+07:00\", \"id\": \"6caac246-e211-4f13-a5d6-305a7bb847ca\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:21.048318+07:00\", \"value\": {\"text\": \"Test content for UUID/string compatibility\"}}, {\"category\": \"contract.type.json\", \"created_at\": \"2025-09-22T22:52:20.936084+07:00\", \"id\": \"e9f5a5e1-ff69-4b15-b0d1-567b5f1f2fb8\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:20.936084+07:00\", \"value\": {\"data\": {\"key\": \"value\", \"number\": 42}}}, {\"category\": \"contract.type.html\", \"created_at\": \"2025-09-22T22:52:20.90109+07:00\", \"id\": \"acf810f0-8eac-46eb-bdf9-8491e5a4b1ca\", \"metadata\": null, \"status\": \"published\", \"type\": \"html\", \"updated_at\": \"2025-09-22T22:52:20.90109+07:00\", \"value\": {\"html\": \"<p>Sample HTML content</p>\"}}, {\"category\": \"contract.type.text\", \"created_at\": \"2025-09-22T22:52:20.848052+07:00\", \"id\": \"f164fcc9-52d7-4629-a7d8-e9ee968f08a7\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:20.848052+07:00\", \"value\": {\"text\": \"Sample text content\"}}, {\"category\": \"navigation.menu.items\", \"created_at\": \"2025-09-22T22:52:20.320704+07:00\", \"id\": \"09475772-4180-40a3-a9b9-f35bec84e42e\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:20.320704+07:00\", \"value\": {\"data\": [{\"label\": \"Home\", \"path\": \"/\"}, {\"label\": \"About\", \"path\": \"/about\"}]}}, {\"category\": \"auth.signin.subtitle\", \"created_at\": \"2025-09-22T22:52:20.308581+07:00\", \"id\": \"18f0c4c1-c39a-439c-970c-ccc864229fe5\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:20.308581+07:00\", \"value\": {\"text\": \"Welcome back to Tchat\"}}, …], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 23}, \"total\": 23}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:41:27",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 27,
                              "line": 41
                            },
                            "snippet": "  39 |         expect(data.data).toHaveProperty('items');\n  40 |         expect(data.data).toHaveProperty('total');\n> 41 |         expect(data.data).toHaveProperty('page');\n     |                           ^\n  42 |         expect(data.data).toHaveProperty('limit');\n  43 |         expect(Array.isArray(data.data.items)).toBe(true);\n  44 |       }"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 27,
                                "line": 41
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:52:22.603336+07:00\", \"id\": \"c0c1d6c4-9c97-482e-b288-afaa4642f1b2\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:22.603336+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, {\"category\": \"navigation.main.title\", \"created_at\": \"2025-09-22T22:52:22.527134+07:00\", \"id\": \"24c5173b-7546-4f9e-845a-4e4fa67f6386\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:22.527134+07:00\", \"value\": {\"text\": \"Content 3\"}}, {\"category\": \"auth.signup.title\", \"created_at\": \"2025-09-22T22:52:22.512321+07:00\", \"id\": \"62260bfc-2f8e-4e2c-9f36-724310b8aafa\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:22.512321+07:00\", \"value\": {\"text\": \"Content 2\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:22.476201+07:00\", \"id\": \"f89b1400-5a77-4c97-8d98-88a452e6c58d\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:22.476201+07:00\", \"value\": {\"text\": \"Content 1\"}}, {\"category\": \"uuid.string.test\", \"created_at\": \"2025-09-22T22:52:21.048318+07:00\", \"id\": \"6caac246-e211-4f13-a5d6-305a7bb847ca\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:21.048318+07:00\", \"value\": {\"text\": \"Test content for UUID/string compatibility\"}}, {\"category\": \"contract.type.json\", \"created_at\": \"2025-09-22T22:52:20.936084+07:00\", \"id\": \"e9f5a5e1-ff69-4b15-b0d1-567b5f1f2fb8\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:20.936084+07:00\", \"value\": {\"data\": {\"key\": \"value\", \"number\": 42}}}, {\"category\": \"contract.type.html\", \"created_at\": \"2025-09-22T22:52:20.90109+07:00\", \"id\": \"acf810f0-8eac-46eb-bdf9-8491e5a4b1ca\", \"metadata\": null, \"status\": \"published\", \"type\": \"html\", \"updated_at\": \"2025-09-22T22:52:20.90109+07:00\", \"value\": {\"html\": \"<p>Sample HTML content</p>\"}}, {\"category\": \"contract.type.text\", \"created_at\": \"2025-09-22T22:52:20.848052+07:00\", \"id\": \"f164fcc9-52d7-4629-a7d8-e9ee968f08a7\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:20.848052+07:00\", \"value\": {\"text\": \"Sample text content\"}}, {\"category\": \"navigation.menu.items\", \"created_at\": \"2025-09-22T22:52:20.320704+07:00\", \"id\": \"09475772-4180-40a3-a9b9-f35bec84e42e\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:20.320704+07:00\", \"value\": {\"data\": [{\"label\": \"Home\", \"path\": \"/\"}, {\"label\": \"About\", \"path\": \"/about\"}]}}, {\"category\": \"auth.signin.subtitle\", \"created_at\": \"2025-09-22T22:52:20.308581+07:00\", \"id\": \"18f0c4c1-c39a-439c-970c-ccc864229fe5\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:20.308581+07:00\", \"value\": {\"text\": \"Welcome back to Tchat\"}}, …], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 23}, \"total\": 23}\u001b[39m\n\n  39 |         expect(data.data).toHaveProperty('items');\n  40 |         expect(data.data).toHaveProperty('total');\n> 41 |         expect(data.data).toHaveProperty('page');\n     |                           ^\n  42 |         expect(data.data).toHaveProperty('limit');\n  43 |         expect(Array.isArray(data.data.items)).toBe(true);\n  44 |       }\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:41:27"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:24.546Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 27,
                            "line": 41
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-1108640509d7331b6047",
                  "file": "content-contract.spec.ts",
                  "line": 14,
                  "column": 9
                },
                {
                  "title": "should return correct structure for single content item",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 563,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"category\": \"contract.test.item\",\u001b[22m\n\u001b[32m-   \"created_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[32m-   \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\",\u001b[39m\n\u001b[31m+   \"created_at\": \"2025-09-22T22:52:25.113267+07:00\",\u001b[39m\n\u001b[31m+   \"id\": \"5c521777-dcc2-4d84-bd53-a7f9e616b818\",\u001b[39m\n\u001b[2m    \"metadata\": null,\u001b[22m\n\u001b[2m    \"status\": \"published\",\u001b[22m\n\u001b[2m    \"type\": \"text\",\u001b[22m\n\u001b[32m-   \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[31m+   \"updated_at\": \"2025-09-22T22:52:25.113267+07:00\",\u001b[39m\n\u001b[2m    \"value\": Object {\u001b[22m\n\u001b[2m      \"text\": \"Contract test content\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"category\": \"contract.test.item\",\u001b[22m\n\u001b[32m-   \"created_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[32m-   \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\",\u001b[39m\n\u001b[31m+   \"created_at\": \"2025-09-22T22:52:25.113267+07:00\",\u001b[39m\n\u001b[31m+   \"id\": \"5c521777-dcc2-4d84-bd53-a7f9e616b818\",\u001b[39m\n\u001b[2m    \"metadata\": null,\u001b[22m\n\u001b[2m    \"status\": \"published\",\u001b[22m\n\u001b[2m    \"type\": \"text\",\u001b[22m\n\u001b[32m-   \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[31m+   \"updated_at\": \"2025-09-22T22:52:25.113267+07:00\",\u001b[39m\n\u001b[2m    \"value\": Object {\u001b[22m\n\u001b[2m      \"text\": \"Contract test content\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:90:32",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 32,
                              "line": 90
                            },
                            "snippet": "  88 |\n  89 |       // Both responses should have identical structure\n> 90 |       expect(getByIdData.data).toEqual(getByKeyData.data);\n     |                                ^\n  91 |     });\n  92 |\n  93 |     test('should validate content value structure by type', async ({ request }) => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 32,
                                "line": 90
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"category\": \"contract.test.item\",\u001b[22m\n\u001b[32m-   \"created_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[32m-   \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\",\u001b[39m\n\u001b[31m+   \"created_at\": \"2025-09-22T22:52:25.113267+07:00\",\u001b[39m\n\u001b[31m+   \"id\": \"5c521777-dcc2-4d84-bd53-a7f9e616b818\",\u001b[39m\n\u001b[2m    \"metadata\": null,\u001b[22m\n\u001b[2m    \"status\": \"published\",\u001b[22m\n\u001b[2m    \"type\": \"text\",\u001b[22m\n\u001b[32m-   \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[31m+   \"updated_at\": \"2025-09-22T22:52:25.113267+07:00\",\u001b[39m\n\u001b[2m    \"value\": Object {\u001b[22m\n\u001b[2m      \"text\": \"Contract test content\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m\n\n  88 |\n  89 |       // Both responses should have identical structure\n> 90 |       expect(getByIdData.data).toEqual(getByKeyData.data);\n     |                                ^\n  91 |     });\n  92 |\n  93 |     test('should validate content value structure by type', async ({ request }) => {\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:90:32"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:24.606Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 32,
                            "line": 90
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-f71d1cc9b373676ac624",
                  "file": "content-contract.spec.ts",
                  "line": 47,
                  "column": 9
                },
                {
                  "title": "should validate content value structure by type",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 477,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:26.882Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-ce22ed842e4564486199",
                  "file": "content-contract.spec.ts",
                  "line": 93,
                  "column": 9
                },
                {
                  "title": "should return correct response structure for content list",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 21,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 421,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"uuid.string.test\", \"created_at\": \"2025-09-22T22:52:31.440588+07:00\", \"id\": \"6b7d8d12-e180-47ea-b22d-22e90ffd709e\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:31.440588+07:00\", \"value\": {\"text\": \"Test content for UUID/string compatibility\"}}, {\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:52:30.811414+07:00\", \"id\": \"445a279c-c27a-4db6-b4ea-49e836420ce0\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:30.811414+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, {\"category\": \"navigation.main.title\", \"created_at\": \"2025-09-22T22:52:30.646033+07:00\", \"id\": \"02b88366-93dd-481f-b42b-7b5668e54275\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:30.646033+07:00\", \"value\": {\"text\": \"Content 3\"}}, {\"category\": \"auth.signup.title\", \"created_at\": \"2025-09-22T22:52:30.570679+07:00\", \"id\": \"0301661c-e921-42ab-9a40-45d8a88c0dc3\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:30.570679+07:00\", \"value\": {\"text\": \"Content 2\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:30.529329+07:00\", \"id\": \"0094b7ea-fa00-4154-b21d-e3984b8e012f\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:30.529329+07:00\", \"value\": {\"text\": \"Content 1\"}}, {\"category\": \"navigation.menu.items\", \"created_at\": \"2025-09-22T22:52:29.443288+07:00\", \"id\": \"da06f7d5-5179-4795-bb8f-c9623b88a098\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:29.443288+07:00\", \"value\": {\"data\": [{\"label\": \"Home\", \"path\": \"/\"}, {\"label\": \"About\", \"path\": \"/about\"}]}}, {\"category\": \"auth.signin.subtitle\", \"created_at\": \"2025-09-22T22:52:29.435714+07:00\", \"id\": \"000644f9-a534-42de-9a67-43d9efcd6685\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:29.435714+07:00\", \"value\": {\"text\": \"Welcome back to Tchat\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:29.427339+07:00\", \"id\": \"5389c9e9-8971-47ff-84a4-2e069eefdf3a\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:29.427339+07:00\", \"value\": {\"text\": \"Sign In\"}}, {\"category\": \"contract.type.json\", \"created_at\": \"2025-09-22T22:52:27.356351+07:00\", \"id\": \"5667d358-0432-4248-8adc-b377f2f07c7d\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:27.356351+07:00\", \"value\": {\"data\": {\"key\": \"value\", \"number\": 42}}}, {\"category\": \"contract.type.html\", \"created_at\": \"2025-09-22T22:52:27.33962+07:00\", \"id\": \"d267a050-e509-4a36-9010-ed53106166c6\", \"metadata\": null, \"status\": \"published\", \"type\": \"html\", \"updated_at\": \"2025-09-22T22:52:27.33962+07:00\", \"value\": {\"html\": \"<p>Sample HTML content</p>\"}}, …], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 38}, \"total\": 38}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"uuid.string.test\", \"created_at\": \"2025-09-22T22:52:31.440588+07:00\", \"id\": \"6b7d8d12-e180-47ea-b22d-22e90ffd709e\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:31.440588+07:00\", \"value\": {\"text\": \"Test content for UUID/string compatibility\"}}, {\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:52:30.811414+07:00\", \"id\": \"445a279c-c27a-4db6-b4ea-49e836420ce0\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:30.811414+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, {\"category\": \"navigation.main.title\", \"created_at\": \"2025-09-22T22:52:30.646033+07:00\", \"id\": \"02b88366-93dd-481f-b42b-7b5668e54275\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:30.646033+07:00\", \"value\": {\"text\": \"Content 3\"}}, {\"category\": \"auth.signup.title\", \"created_at\": \"2025-09-22T22:52:30.570679+07:00\", \"id\": \"0301661c-e921-42ab-9a40-45d8a88c0dc3\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:30.570679+07:00\", \"value\": {\"text\": \"Content 2\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:30.529329+07:00\", \"id\": \"0094b7ea-fa00-4154-b21d-e3984b8e012f\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:30.529329+07:00\", \"value\": {\"text\": \"Content 1\"}}, {\"category\": \"navigation.menu.items\", \"created_at\": \"2025-09-22T22:52:29.443288+07:00\", \"id\": \"da06f7d5-5179-4795-bb8f-c9623b88a098\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:29.443288+07:00\", \"value\": {\"data\": [{\"label\": \"Home\", \"path\": \"/\"}, {\"label\": \"About\", \"path\": \"/about\"}]}}, {\"category\": \"auth.signin.subtitle\", \"created_at\": \"2025-09-22T22:52:29.435714+07:00\", \"id\": \"000644f9-a534-42de-9a67-43d9efcd6685\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:29.435714+07:00\", \"value\": {\"text\": \"Welcome back to Tchat\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:29.427339+07:00\", \"id\": \"5389c9e9-8971-47ff-84a4-2e069eefdf3a\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:29.427339+07:00\", \"value\": {\"text\": \"Sign In\"}}, {\"category\": \"contract.type.json\", \"created_at\": \"2025-09-22T22:52:27.356351+07:00\", \"id\": \"5667d358-0432-4248-8adc-b377f2f07c7d\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:27.356351+07:00\", \"value\": {\"data\": {\"key\": \"value\", \"number\": 42}}}, {\"category\": \"contract.type.html\", \"created_at\": \"2025-09-22T22:52:27.33962+07:00\", \"id\": \"d267a050-e509-4a36-9010-ed53106166c6\", \"metadata\": null, \"status\": \"published\", \"type\": \"html\", \"updated_at\": \"2025-09-22T22:52:27.33962+07:00\", \"value\": {\"html\": \"<p>Sample HTML content</p>\"}}, …], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 38}, \"total\": 38}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:41:27",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 27,
                              "line": 41
                            },
                            "snippet": "  39 |         expect(data.data).toHaveProperty('items');\n  40 |         expect(data.data).toHaveProperty('total');\n> 41 |         expect(data.data).toHaveProperty('page');\n     |                           ^\n  42 |         expect(data.data).toHaveProperty('limit');\n  43 |         expect(Array.isArray(data.data.items)).toBe(true);\n  44 |       }"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 27,
                                "line": 41
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"uuid.string.test\", \"created_at\": \"2025-09-22T22:52:31.440588+07:00\", \"id\": \"6b7d8d12-e180-47ea-b22d-22e90ffd709e\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:31.440588+07:00\", \"value\": {\"text\": \"Test content for UUID/string compatibility\"}}, {\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:52:30.811414+07:00\", \"id\": \"445a279c-c27a-4db6-b4ea-49e836420ce0\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:30.811414+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, {\"category\": \"navigation.main.title\", \"created_at\": \"2025-09-22T22:52:30.646033+07:00\", \"id\": \"02b88366-93dd-481f-b42b-7b5668e54275\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:30.646033+07:00\", \"value\": {\"text\": \"Content 3\"}}, {\"category\": \"auth.signup.title\", \"created_at\": \"2025-09-22T22:52:30.570679+07:00\", \"id\": \"0301661c-e921-42ab-9a40-45d8a88c0dc3\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:30.570679+07:00\", \"value\": {\"text\": \"Content 2\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:30.529329+07:00\", \"id\": \"0094b7ea-fa00-4154-b21d-e3984b8e012f\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:30.529329+07:00\", \"value\": {\"text\": \"Content 1\"}}, {\"category\": \"navigation.menu.items\", \"created_at\": \"2025-09-22T22:52:29.443288+07:00\", \"id\": \"da06f7d5-5179-4795-bb8f-c9623b88a098\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:29.443288+07:00\", \"value\": {\"data\": [{\"label\": \"Home\", \"path\": \"/\"}, {\"label\": \"About\", \"path\": \"/about\"}]}}, {\"category\": \"auth.signin.subtitle\", \"created_at\": \"2025-09-22T22:52:29.435714+07:00\", \"id\": \"000644f9-a534-42de-9a67-43d9efcd6685\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:29.435714+07:00\", \"value\": {\"text\": \"Welcome back to Tchat\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:29.427339+07:00\", \"id\": \"5389c9e9-8971-47ff-84a4-2e069eefdf3a\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:29.427339+07:00\", \"value\": {\"text\": \"Sign In\"}}, {\"category\": \"contract.type.json\", \"created_at\": \"2025-09-22T22:52:27.356351+07:00\", \"id\": \"5667d358-0432-4248-8adc-b377f2f07c7d\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:27.356351+07:00\", \"value\": {\"data\": {\"key\": \"value\", \"number\": 42}}}, {\"category\": \"contract.type.html\", \"created_at\": \"2025-09-22T22:52:27.33962+07:00\", \"id\": \"d267a050-e509-4a36-9010-ed53106166c6\", \"metadata\": null, \"status\": \"published\", \"type\": \"html\", \"updated_at\": \"2025-09-22T22:52:27.33962+07:00\", \"value\": {\"html\": \"<p>Sample HTML content</p>\"}}, …], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 38}, \"total\": 38}\u001b[39m\n\n  39 |         expect(data.data).toHaveProperty('items');\n  40 |         expect(data.data).toHaveProperty('total');\n> 41 |         expect(data.data).toHaveProperty('page');\n     |                           ^\n  42 |         expect(data.data).toHaveProperty('limit');\n  43 |         expect(Array.isArray(data.data.items)).toBe(true);\n  44 |       }\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:41:27"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:32.379Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 27,
                            "line": 41
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-322ca66bec6d9f161d6d",
                  "file": "content-contract.spec.ts",
                  "line": 14,
                  "column": 9
                },
                {
                  "title": "should return correct structure for single content item",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 22,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 423,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"category\": \"contract.test.item\",\u001b[22m\n\u001b[32m-   \"created_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[32m-   \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\",\u001b[39m\n\u001b[31m+   \"created_at\": \"2025-09-22T22:52:33.076441+07:00\",\u001b[39m\n\u001b[31m+   \"id\": \"8f93d268-ba37-4696-a257-e9cfbf176a47\",\u001b[39m\n\u001b[2m    \"metadata\": null,\u001b[22m\n\u001b[2m    \"status\": \"published\",\u001b[22m\n\u001b[2m    \"type\": \"text\",\u001b[22m\n\u001b[32m-   \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[31m+   \"updated_at\": \"2025-09-22T22:52:33.076441+07:00\",\u001b[39m\n\u001b[2m    \"value\": Object {\u001b[22m\n\u001b[2m      \"text\": \"Contract test content\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"category\": \"contract.test.item\",\u001b[22m\n\u001b[32m-   \"created_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[32m-   \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\",\u001b[39m\n\u001b[31m+   \"created_at\": \"2025-09-22T22:52:33.076441+07:00\",\u001b[39m\n\u001b[31m+   \"id\": \"8f93d268-ba37-4696-a257-e9cfbf176a47\",\u001b[39m\n\u001b[2m    \"metadata\": null,\u001b[22m\n\u001b[2m    \"status\": \"published\",\u001b[22m\n\u001b[2m    \"type\": \"text\",\u001b[22m\n\u001b[32m-   \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[31m+   \"updated_at\": \"2025-09-22T22:52:33.076441+07:00\",\u001b[39m\n\u001b[2m    \"value\": Object {\u001b[22m\n\u001b[2m      \"text\": \"Contract test content\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:90:32",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 32,
                              "line": 90
                            },
                            "snippet": "  88 |\n  89 |       // Both responses should have identical structure\n> 90 |       expect(getByIdData.data).toEqual(getByKeyData.data);\n     |                                ^\n  91 |     });\n  92 |\n  93 |     test('should validate content value structure by type', async ({ request }) => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 32,
                                "line": 90
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"category\": \"contract.test.item\",\u001b[22m\n\u001b[32m-   \"created_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[32m-   \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\",\u001b[39m\n\u001b[31m+   \"created_at\": \"2025-09-22T22:52:33.076441+07:00\",\u001b[39m\n\u001b[31m+   \"id\": \"8f93d268-ba37-4696-a257-e9cfbf176a47\",\u001b[39m\n\u001b[2m    \"metadata\": null,\u001b[22m\n\u001b[2m    \"status\": \"published\",\u001b[22m\n\u001b[2m    \"type\": \"text\",\u001b[22m\n\u001b[32m-   \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[31m+   \"updated_at\": \"2025-09-22T22:52:33.076441+07:00\",\u001b[39m\n\u001b[2m    \"value\": Object {\u001b[22m\n\u001b[2m      \"text\": \"Contract test content\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m\n\n  88 |\n  89 |       // Both responses should have identical structure\n> 90 |       expect(getByIdData.data).toEqual(getByKeyData.data);\n     |                                ^\n  91 |     });\n  92 |\n  93 |     test('should validate content value structure by type', async ({ request }) => {\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:90:32"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:32.706Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 32,
                            "line": 90
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-37b703214683b013d945",
                  "file": "content-contract.spec.ts",
                  "line": 47,
                  "column": 9
                },
                {
                  "title": "should validate content value structure by type",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 23,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 633,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:34.531Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-0c4b527eecb345f5b4af",
                  "file": "content-contract.spec.ts",
                  "line": 93,
                  "column": 9
                },
                {
                  "title": "should return correct response structure for content list",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 28,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 395,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:52:39.669365+07:00\", \"id\": \"7f074ce2-b466-47f2-a511-ede877734b97\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:39.669365+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, {\"category\": \"navigation.menu.items\", \"created_at\": \"2025-09-22T22:52:38.035655+07:00\", \"id\": \"38f7ed32-2390-4763-8912-52873ac14c6a\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:38.035655+07:00\", \"value\": {\"data\": [{\"label\": \"Home\", \"path\": \"/\"}, {\"label\": \"About\", \"path\": \"/about\"}]}}, {\"category\": \"auth.signin.subtitle\", \"created_at\": \"2025-09-22T22:52:38.024962+07:00\", \"id\": \"b59a7840-553b-4ffc-842f-b810b48ae440\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:38.024962+07:00\", \"value\": {\"text\": \"Welcome back to Tchat\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:38.01217+07:00\", \"id\": \"55a296c8-fddd-41c1-91b6-2dd0b9f57c93\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:38.01217+07:00\", \"value\": {\"text\": \"Sign In\"}}, {\"category\": \"uuid.string.test\", \"created_at\": \"2025-09-22T22:52:37.411297+07:00\", \"id\": \"9726a473-3e66-43bf-8f0a-6275238ff3b2\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:37.411297+07:00\", \"value\": {\"text\": \"Test content for UUID/string compatibility\"}}, {\"category\": \"navigation.main.title\", \"created_at\": \"2025-09-22T22:52:37.197402+07:00\", \"id\": \"ba8a1619-b679-41b4-a5ac-3ba88189b39e\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:37.197402+07:00\", \"value\": {\"text\": \"Content 3\"}}, {\"category\": \"auth.signup.title\", \"created_at\": \"2025-09-22T22:52:37.178823+07:00\", \"id\": \"38cea279-417f-412a-b10a-cb6f9cf19f3f\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:37.178823+07:00\", \"value\": {\"text\": \"Content 2\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:37.151432+07:00\", \"id\": \"179248a0-4b56-4a38-bb14-d257761ba6be\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:37.151432+07:00\", \"value\": {\"text\": \"Content 1\"}}, {\"category\": \"contract.type.json\", \"created_at\": \"2025-09-22T22:52:35.177959+07:00\", \"id\": \"2dd708d4-60c4-4770-a4e6-e58fd6761f97\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:35.177959+07:00\", \"value\": {\"data\": {\"key\": \"value\", \"number\": 42}}}, {\"category\": \"contract.type.html\", \"created_at\": \"2025-09-22T22:52:35.166041+07:00\", \"id\": \"07b19b53-77b1-4ca9-a729-3fef0be25776\", \"metadata\": null, \"status\": \"published\", \"type\": \"html\", \"updated_at\": \"2025-09-22T22:52:35.166041+07:00\", \"value\": {\"html\": \"<p>Sample HTML content</p>\"}}, …], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 50}, \"total\": 50}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:52:39.669365+07:00\", \"id\": \"7f074ce2-b466-47f2-a511-ede877734b97\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:39.669365+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, {\"category\": \"navigation.menu.items\", \"created_at\": \"2025-09-22T22:52:38.035655+07:00\", \"id\": \"38f7ed32-2390-4763-8912-52873ac14c6a\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:38.035655+07:00\", \"value\": {\"data\": [{\"label\": \"Home\", \"path\": \"/\"}, {\"label\": \"About\", \"path\": \"/about\"}]}}, {\"category\": \"auth.signin.subtitle\", \"created_at\": \"2025-09-22T22:52:38.024962+07:00\", \"id\": \"b59a7840-553b-4ffc-842f-b810b48ae440\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:38.024962+07:00\", \"value\": {\"text\": \"Welcome back to Tchat\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:38.01217+07:00\", \"id\": \"55a296c8-fddd-41c1-91b6-2dd0b9f57c93\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:38.01217+07:00\", \"value\": {\"text\": \"Sign In\"}}, {\"category\": \"uuid.string.test\", \"created_at\": \"2025-09-22T22:52:37.411297+07:00\", \"id\": \"9726a473-3e66-43bf-8f0a-6275238ff3b2\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:37.411297+07:00\", \"value\": {\"text\": \"Test content for UUID/string compatibility\"}}, {\"category\": \"navigation.main.title\", \"created_at\": \"2025-09-22T22:52:37.197402+07:00\", \"id\": \"ba8a1619-b679-41b4-a5ac-3ba88189b39e\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:37.197402+07:00\", \"value\": {\"text\": \"Content 3\"}}, {\"category\": \"auth.signup.title\", \"created_at\": \"2025-09-22T22:52:37.178823+07:00\", \"id\": \"38cea279-417f-412a-b10a-cb6f9cf19f3f\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:37.178823+07:00\", \"value\": {\"text\": \"Content 2\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:37.151432+07:00\", \"id\": \"179248a0-4b56-4a38-bb14-d257761ba6be\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:37.151432+07:00\", \"value\": {\"text\": \"Content 1\"}}, {\"category\": \"contract.type.json\", \"created_at\": \"2025-09-22T22:52:35.177959+07:00\", \"id\": \"2dd708d4-60c4-4770-a4e6-e58fd6761f97\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:35.177959+07:00\", \"value\": {\"data\": {\"key\": \"value\", \"number\": 42}}}, {\"category\": \"contract.type.html\", \"created_at\": \"2025-09-22T22:52:35.166041+07:00\", \"id\": \"07b19b53-77b1-4ca9-a729-3fef0be25776\", \"metadata\": null, \"status\": \"published\", \"type\": \"html\", \"updated_at\": \"2025-09-22T22:52:35.166041+07:00\", \"value\": {\"html\": \"<p>Sample HTML content</p>\"}}, …], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 50}, \"total\": 50}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:41:27",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 27,
                              "line": 41
                            },
                            "snippet": "  39 |         expect(data.data).toHaveProperty('items');\n  40 |         expect(data.data).toHaveProperty('total');\n> 41 |         expect(data.data).toHaveProperty('page');\n     |                           ^\n  42 |         expect(data.data).toHaveProperty('limit');\n  43 |         expect(Array.isArray(data.data.items)).toBe(true);\n  44 |       }"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 27,
                                "line": 41
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:52:39.669365+07:00\", \"id\": \"7f074ce2-b466-47f2-a511-ede877734b97\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:39.669365+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, {\"category\": \"navigation.menu.items\", \"created_at\": \"2025-09-22T22:52:38.035655+07:00\", \"id\": \"38f7ed32-2390-4763-8912-52873ac14c6a\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:38.035655+07:00\", \"value\": {\"data\": [{\"label\": \"Home\", \"path\": \"/\"}, {\"label\": \"About\", \"path\": \"/about\"}]}}, {\"category\": \"auth.signin.subtitle\", \"created_at\": \"2025-09-22T22:52:38.024962+07:00\", \"id\": \"b59a7840-553b-4ffc-842f-b810b48ae440\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:38.024962+07:00\", \"value\": {\"text\": \"Welcome back to Tchat\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:38.01217+07:00\", \"id\": \"55a296c8-fddd-41c1-91b6-2dd0b9f57c93\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:38.01217+07:00\", \"value\": {\"text\": \"Sign In\"}}, {\"category\": \"uuid.string.test\", \"created_at\": \"2025-09-22T22:52:37.411297+07:00\", \"id\": \"9726a473-3e66-43bf-8f0a-6275238ff3b2\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:37.411297+07:00\", \"value\": {\"text\": \"Test content for UUID/string compatibility\"}}, {\"category\": \"navigation.main.title\", \"created_at\": \"2025-09-22T22:52:37.197402+07:00\", \"id\": \"ba8a1619-b679-41b4-a5ac-3ba88189b39e\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:37.197402+07:00\", \"value\": {\"text\": \"Content 3\"}}, {\"category\": \"auth.signup.title\", \"created_at\": \"2025-09-22T22:52:37.178823+07:00\", \"id\": \"38cea279-417f-412a-b10a-cb6f9cf19f3f\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:37.178823+07:00\", \"value\": {\"text\": \"Content 2\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:37.151432+07:00\", \"id\": \"179248a0-4b56-4a38-bb14-d257761ba6be\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:37.151432+07:00\", \"value\": {\"text\": \"Content 1\"}}, {\"category\": \"contract.type.json\", \"created_at\": \"2025-09-22T22:52:35.177959+07:00\", \"id\": \"2dd708d4-60c4-4770-a4e6-e58fd6761f97\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:35.177959+07:00\", \"value\": {\"data\": {\"key\": \"value\", \"number\": 42}}}, {\"category\": \"contract.type.html\", \"created_at\": \"2025-09-22T22:52:35.166041+07:00\", \"id\": \"07b19b53-77b1-4ca9-a729-3fef0be25776\", \"metadata\": null, \"status\": \"published\", \"type\": \"html\", \"updated_at\": \"2025-09-22T22:52:35.166041+07:00\", \"value\": {\"html\": \"<p>Sample HTML content</p>\"}}, …], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 50}, \"total\": 50}\u001b[39m\n\n  39 |         expect(data.data).toHaveProperty('items');\n  40 |         expect(data.data).toHaveProperty('total');\n> 41 |         expect(data.data).toHaveProperty('page');\n     |                           ^\n  42 |         expect(data.data).toHaveProperty('limit');\n  43 |         expect(Array.isArray(data.data.items)).toBe(true);\n  44 |       }\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:41:27"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:41.267Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 27,
                            "line": 41
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-c96614fea0eb0dec9c68",
                  "file": "content-contract.spec.ts",
                  "line": 14,
                  "column": 9
                },
                {
                  "title": "should return correct structure for single content item",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 29,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 424,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"category\": \"contract.test.item\",\u001b[22m\n\u001b[32m-   \"created_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[32m-   \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\",\u001b[39m\n\u001b[31m+   \"created_at\": \"2025-09-22T22:52:43.318159+07:00\",\u001b[39m\n\u001b[31m+   \"id\": \"3609eb5b-d3d0-4be0-a378-75410ef81108\",\u001b[39m\n\u001b[2m    \"metadata\": null,\u001b[22m\n\u001b[2m    \"status\": \"published\",\u001b[22m\n\u001b[2m    \"type\": \"text\",\u001b[22m\n\u001b[32m-   \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[31m+   \"updated_at\": \"2025-09-22T22:52:43.318159+07:00\",\u001b[39m\n\u001b[2m    \"value\": Object {\u001b[22m\n\u001b[2m      \"text\": \"Contract test content\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"category\": \"contract.test.item\",\u001b[22m\n\u001b[32m-   \"created_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[32m-   \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\",\u001b[39m\n\u001b[31m+   \"created_at\": \"2025-09-22T22:52:43.318159+07:00\",\u001b[39m\n\u001b[31m+   \"id\": \"3609eb5b-d3d0-4be0-a378-75410ef81108\",\u001b[39m\n\u001b[2m    \"metadata\": null,\u001b[22m\n\u001b[2m    \"status\": \"published\",\u001b[22m\n\u001b[2m    \"type\": \"text\",\u001b[22m\n\u001b[32m-   \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[31m+   \"updated_at\": \"2025-09-22T22:52:43.318159+07:00\",\u001b[39m\n\u001b[2m    \"value\": Object {\u001b[22m\n\u001b[2m      \"text\": \"Contract test content\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:90:32",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 32,
                              "line": 90
                            },
                            "snippet": "  88 |\n  89 |       // Both responses should have identical structure\n> 90 |       expect(getByIdData.data).toEqual(getByKeyData.data);\n     |                                ^\n  91 |     });\n  92 |\n  93 |     test('should validate content value structure by type', async ({ request }) => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 32,
                                "line": 90
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"category\": \"contract.test.item\",\u001b[22m\n\u001b[32m-   \"created_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[32m-   \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\",\u001b[39m\n\u001b[31m+   \"created_at\": \"2025-09-22T22:52:43.318159+07:00\",\u001b[39m\n\u001b[31m+   \"id\": \"3609eb5b-d3d0-4be0-a378-75410ef81108\",\u001b[39m\n\u001b[2m    \"metadata\": null,\u001b[22m\n\u001b[2m    \"status\": \"published\",\u001b[22m\n\u001b[2m    \"type\": \"text\",\u001b[22m\n\u001b[32m-   \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[31m+   \"updated_at\": \"2025-09-22T22:52:43.318159+07:00\",\u001b[39m\n\u001b[2m    \"value\": Object {\u001b[22m\n\u001b[2m      \"text\": \"Contract test content\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m\n\n  88 |\n  89 |       // Both responses should have identical structure\n> 90 |       expect(getByIdData.data).toEqual(getByKeyData.data);\n     |                                ^\n  91 |     });\n  92 |\n  93 |     test('should validate content value structure by type', async ({ request }) => {\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:90:32"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:42.949Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 32,
                            "line": 90
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-1974579948b391ca8b88",
                  "file": "content-contract.spec.ts",
                  "line": 47,
                  "column": 9
                },
                {
                  "title": "should validate content value structure by type",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 30,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 429,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:45.002Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-22248bba48504c318294",
                  "file": "content-contract.spec.ts",
                  "line": 93,
                  "column": 9
                },
                {
                  "title": "should return correct response structure for content list",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Microsoft Edge",
                      "projectName": "Microsoft Edge",
                      "results": [
                        {
                          "workerIndex": 35,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 387,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:52:59.339575+07:00\", \"id\": \"8d011f99-e6ca-4b76-ab1d-032c4954a148\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:59.339575+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, {\"category\": \"uuid.string.test\", \"created_at\": \"2025-09-22T22:52:57.515999+07:00\", \"id\": \"33afbdcf-92b4-4663-b1cf-62ef0a9f77e0\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:57.515999+07:00\", \"value\": {\"text\": \"Test content for UUID/string compatibility\"}}, {\"category\": \"navigation.main.title\", \"created_at\": \"2025-09-22T22:52:57.44256+07:00\", \"id\": \"0b159de7-3f00-4208-ba04-f887a67249c3\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:57.44256+07:00\", \"value\": {\"text\": \"Content 3\"}}, {\"category\": \"auth.signup.title\", \"created_at\": \"2025-09-22T22:52:57.427255+07:00\", \"id\": \"5ae5c29b-96be-47a0-b13a-6682ec80fc81\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:57.427255+07:00\", \"value\": {\"text\": \"Content 2\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:57.407567+07:00\", \"id\": \"21f916bc-30df-4d2e-8288-02d4b10c951a\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:57.407567+07:00\", \"value\": {\"text\": \"Content 1\"}}, {\"category\": \"navigation.menu.items\", \"created_at\": \"2025-09-22T22:52:50.032478+07:00\", \"id\": \"ee28747b-2a4b-4c65-9965-efe2641673ce\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:50.032478+07:00\", \"value\": {\"data\": [{\"label\": \"Home\", \"path\": \"/\"}, {\"label\": \"About\", \"path\": \"/about\"}]}}, {\"category\": \"auth.signin.subtitle\", \"created_at\": \"2025-09-22T22:52:50.021488+07:00\", \"id\": \"951b3133-4118-488d-b1e2-d4b0fc7bbbcb\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:50.021488+07:00\", \"value\": {\"text\": \"Welcome back to Tchat\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:49.996347+07:00\", \"id\": \"99214bff-2f28-4513-aec5-092d2385be37\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:49.996347+07:00\", \"value\": {\"text\": \"Sign In\"}}, {\"category\": \"contract.type.json\", \"created_at\": \"2025-09-22T22:52:45.424231+07:00\", \"id\": \"4e1e6d3b-4f5e-448e-b398-fe61c0e5f308\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:45.424231+07:00\", \"value\": {\"data\": {\"key\": \"value\", \"number\": 42}}}, {\"category\": \"contract.type.html\", \"created_at\": \"2025-09-22T22:52:45.402905+07:00\", \"id\": \"7e6c8cd3-599c-46ed-b0bc-c85af44345e4\", \"metadata\": null, \"status\": \"published\", \"type\": \"html\", \"updated_at\": \"2025-09-22T22:52:45.402905+07:00\", \"value\": {\"html\": \"<p>Sample HTML content</p>\"}}, …], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 62}, \"total\": 62}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:52:59.339575+07:00\", \"id\": \"8d011f99-e6ca-4b76-ab1d-032c4954a148\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:59.339575+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, {\"category\": \"uuid.string.test\", \"created_at\": \"2025-09-22T22:52:57.515999+07:00\", \"id\": \"33afbdcf-92b4-4663-b1cf-62ef0a9f77e0\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:57.515999+07:00\", \"value\": {\"text\": \"Test content for UUID/string compatibility\"}}, {\"category\": \"navigation.main.title\", \"created_at\": \"2025-09-22T22:52:57.44256+07:00\", \"id\": \"0b159de7-3f00-4208-ba04-f887a67249c3\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:57.44256+07:00\", \"value\": {\"text\": \"Content 3\"}}, {\"category\": \"auth.signup.title\", \"created_at\": \"2025-09-22T22:52:57.427255+07:00\", \"id\": \"5ae5c29b-96be-47a0-b13a-6682ec80fc81\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:57.427255+07:00\", \"value\": {\"text\": \"Content 2\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:57.407567+07:00\", \"id\": \"21f916bc-30df-4d2e-8288-02d4b10c951a\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:57.407567+07:00\", \"value\": {\"text\": \"Content 1\"}}, {\"category\": \"navigation.menu.items\", \"created_at\": \"2025-09-22T22:52:50.032478+07:00\", \"id\": \"ee28747b-2a4b-4c65-9965-efe2641673ce\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:50.032478+07:00\", \"value\": {\"data\": [{\"label\": \"Home\", \"path\": \"/\"}, {\"label\": \"About\", \"path\": \"/about\"}]}}, {\"category\": \"auth.signin.subtitle\", \"created_at\": \"2025-09-22T22:52:50.021488+07:00\", \"id\": \"951b3133-4118-488d-b1e2-d4b0fc7bbbcb\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:50.021488+07:00\", \"value\": {\"text\": \"Welcome back to Tchat\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:49.996347+07:00\", \"id\": \"99214bff-2f28-4513-aec5-092d2385be37\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:49.996347+07:00\", \"value\": {\"text\": \"Sign In\"}}, {\"category\": \"contract.type.json\", \"created_at\": \"2025-09-22T22:52:45.424231+07:00\", \"id\": \"4e1e6d3b-4f5e-448e-b398-fe61c0e5f308\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:45.424231+07:00\", \"value\": {\"data\": {\"key\": \"value\", \"number\": 42}}}, {\"category\": \"contract.type.html\", \"created_at\": \"2025-09-22T22:52:45.402905+07:00\", \"id\": \"7e6c8cd3-599c-46ed-b0bc-c85af44345e4\", \"metadata\": null, \"status\": \"published\", \"type\": \"html\", \"updated_at\": \"2025-09-22T22:52:45.402905+07:00\", \"value\": {\"html\": \"<p>Sample HTML content</p>\"}}, …], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 62}, \"total\": 62}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:41:27",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 27,
                              "line": 41
                            },
                            "snippet": "  39 |         expect(data.data).toHaveProperty('items');\n  40 |         expect(data.data).toHaveProperty('total');\n> 41 |         expect(data.data).toHaveProperty('page');\n     |                           ^\n  42 |         expect(data.data).toHaveProperty('limit');\n  43 |         expect(Array.isArray(data.data.items)).toBe(true);\n  44 |       }"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 27,
                                "line": 41
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:52:59.339575+07:00\", \"id\": \"8d011f99-e6ca-4b76-ab1d-032c4954a148\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:59.339575+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, {\"category\": \"uuid.string.test\", \"created_at\": \"2025-09-22T22:52:57.515999+07:00\", \"id\": \"33afbdcf-92b4-4663-b1cf-62ef0a9f77e0\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:57.515999+07:00\", \"value\": {\"text\": \"Test content for UUID/string compatibility\"}}, {\"category\": \"navigation.main.title\", \"created_at\": \"2025-09-22T22:52:57.44256+07:00\", \"id\": \"0b159de7-3f00-4208-ba04-f887a67249c3\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:57.44256+07:00\", \"value\": {\"text\": \"Content 3\"}}, {\"category\": \"auth.signup.title\", \"created_at\": \"2025-09-22T22:52:57.427255+07:00\", \"id\": \"5ae5c29b-96be-47a0-b13a-6682ec80fc81\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:57.427255+07:00\", \"value\": {\"text\": \"Content 2\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:57.407567+07:00\", \"id\": \"21f916bc-30df-4d2e-8288-02d4b10c951a\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:57.407567+07:00\", \"value\": {\"text\": \"Content 1\"}}, {\"category\": \"navigation.menu.items\", \"created_at\": \"2025-09-22T22:52:50.032478+07:00\", \"id\": \"ee28747b-2a4b-4c65-9965-efe2641673ce\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:50.032478+07:00\", \"value\": {\"data\": [{\"label\": \"Home\", \"path\": \"/\"}, {\"label\": \"About\", \"path\": \"/about\"}]}}, {\"category\": \"auth.signin.subtitle\", \"created_at\": \"2025-09-22T22:52:50.021488+07:00\", \"id\": \"951b3133-4118-488d-b1e2-d4b0fc7bbbcb\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:50.021488+07:00\", \"value\": {\"text\": \"Welcome back to Tchat\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:52:49.996347+07:00\", \"id\": \"99214bff-2f28-4513-aec5-092d2385be37\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:49.996347+07:00\", \"value\": {\"text\": \"Sign In\"}}, {\"category\": \"contract.type.json\", \"created_at\": \"2025-09-22T22:52:45.424231+07:00\", \"id\": \"4e1e6d3b-4f5e-448e-b398-fe61c0e5f308\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:52:45.424231+07:00\", \"value\": {\"data\": {\"key\": \"value\", \"number\": 42}}}, {\"category\": \"contract.type.html\", \"created_at\": \"2025-09-22T22:52:45.402905+07:00\", \"id\": \"7e6c8cd3-599c-46ed-b0bc-c85af44345e4\", \"metadata\": null, \"status\": \"published\", \"type\": \"html\", \"updated_at\": \"2025-09-22T22:52:45.402905+07:00\", \"value\": {\"html\": \"<p>Sample HTML content</p>\"}}, …], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 62}, \"total\": 62}\u001b[39m\n\n  39 |         expect(data.data).toHaveProperty('items');\n  40 |         expect(data.data).toHaveProperty('total');\n> 41 |         expect(data.data).toHaveProperty('page');\n     |                           ^\n  42 |         expect(data.data).toHaveProperty('limit');\n  43 |         expect(Array.isArray(data.data.items)).toBe(true);\n  44 |       }\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:41:27"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:53:00.863Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 27,
                            "line": 41
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-a1a513c7ff3aeebde9e2",
                  "file": "content-contract.spec.ts",
                  "line": 14,
                  "column": 9
                },
                {
                  "title": "should return correct structure for single content item",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Microsoft Edge",
                      "projectName": "Microsoft Edge",
                      "results": [
                        {
                          "workerIndex": 36,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 434,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"category\": \"contract.test.item\",\u001b[22m\n\u001b[32m-   \"created_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[32m-   \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\",\u001b[39m\n\u001b[31m+   \"created_at\": \"2025-09-22T22:53:01.944792+07:00\",\u001b[39m\n\u001b[31m+   \"id\": \"6b2e03cb-7a1c-431f-8b7c-552d65e0e1be\",\u001b[39m\n\u001b[2m    \"metadata\": null,\u001b[22m\n\u001b[2m    \"status\": \"published\",\u001b[22m\n\u001b[2m    \"type\": \"text\",\u001b[22m\n\u001b[32m-   \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[31m+   \"updated_at\": \"2025-09-22T22:53:01.944792+07:00\",\u001b[39m\n\u001b[2m    \"value\": Object {\u001b[22m\n\u001b[2m      \"text\": \"Contract test content\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"category\": \"contract.test.item\",\u001b[22m\n\u001b[32m-   \"created_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[32m-   \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\",\u001b[39m\n\u001b[31m+   \"created_at\": \"2025-09-22T22:53:01.944792+07:00\",\u001b[39m\n\u001b[31m+   \"id\": \"6b2e03cb-7a1c-431f-8b7c-552d65e0e1be\",\u001b[39m\n\u001b[2m    \"metadata\": null,\u001b[22m\n\u001b[2m    \"status\": \"published\",\u001b[22m\n\u001b[2m    \"type\": \"text\",\u001b[22m\n\u001b[32m-   \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[31m+   \"updated_at\": \"2025-09-22T22:53:01.944792+07:00\",\u001b[39m\n\u001b[2m    \"value\": Object {\u001b[22m\n\u001b[2m      \"text\": \"Contract test content\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:90:32",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 32,
                              "line": 90
                            },
                            "snippet": "  88 |\n  89 |       // Both responses should have identical structure\n> 90 |       expect(getByIdData.data).toEqual(getByKeyData.data);\n     |                                ^\n  91 |     });\n  92 |\n  93 |     test('should validate content value structure by type', async ({ request }) => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 32,
                                "line": 90
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"category\": \"contract.test.item\",\u001b[22m\n\u001b[32m-   \"created_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[32m-   \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\",\u001b[39m\n\u001b[31m+   \"created_at\": \"2025-09-22T22:53:01.944792+07:00\",\u001b[39m\n\u001b[31m+   \"id\": \"6b2e03cb-7a1c-431f-8b7c-552d65e0e1be\",\u001b[39m\n\u001b[2m    \"metadata\": null,\u001b[22m\n\u001b[2m    \"status\": \"published\",\u001b[22m\n\u001b[2m    \"type\": \"text\",\u001b[22m\n\u001b[32m-   \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[31m+   \"updated_at\": \"2025-09-22T22:53:01.944792+07:00\",\u001b[39m\n\u001b[2m    \"value\": Object {\u001b[22m\n\u001b[2m      \"text\": \"Contract test content\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m\n\n  88 |\n  89 |       // Both responses should have identical structure\n> 90 |       expect(getByIdData.data).toEqual(getByKeyData.data);\n     |                                ^\n  91 |     });\n  92 |\n  93 |     test('should validate content value structure by type', async ({ request }) => {\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:90:32"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:53:01.576Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 32,
                            "line": 90
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-0f9b4c17c2222c90ba2a",
                  "file": "content-contract.spec.ts",
                  "line": 47,
                  "column": 9
                },
                {
                  "title": "should validate content value structure by type",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Microsoft Edge",
                      "projectName": "Microsoft Edge",
                      "results": [
                        {
                          "workerIndex": 37,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 428,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:53:02.303Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-7785e5fabab530429658",
                  "file": "content-contract.spec.ts",
                  "line": 93,
                  "column": 9
                },
                {
                  "title": "should return correct response structure for content list",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Google Chrome",
                      "projectName": "Google Chrome",
                      "results": [
                        {
                          "workerIndex": 42,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 380,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"uuid.string.test\", \"created_at\": \"2025-09-22T22:53:05.248788+07:00\", \"id\": \"b6e5705e-62e0-453c-bb88-fd1d991a3405\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:05.248788+07:00\", \"value\": {\"text\": \"Test content for UUID/string compatibility\"}}, {\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:53:05.203755+07:00\", \"id\": \"820d84a0-eca4-4855-99fc-61456ffac897\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:05.203755+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, {\"category\": \"navigation.main.title\", \"created_at\": \"2025-09-22T22:53:05.124689+07:00\", \"id\": \"c60a5eb1-bce7-4638-901b-0f919794512b\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:05.124689+07:00\", \"value\": {\"text\": \"Content 3\"}}, {\"category\": \"auth.signup.title\", \"created_at\": \"2025-09-22T22:53:05.112171+07:00\", \"id\": \"946f80f4-ce84-4e0b-bd53-f3bfad168666\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:05.112171+07:00\", \"value\": {\"text\": \"Content 2\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:53:05.095035+07:00\", \"id\": \"639df3a4-7e62-40ee-9dc7-08dbdd689aff\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:05.095035+07:00\", \"value\": {\"text\": \"Content 1\"}}, {\"category\": \"contract.type.json\", \"created_at\": \"2025-09-22T22:53:02.724965+07:00\", \"id\": \"e49f7744-db57-4a79-af84-d7977c6ee046\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:53:02.724965+07:00\", \"value\": {\"data\": {\"key\": \"value\", \"number\": 42}}}, {\"category\": \"contract.type.html\", \"created_at\": \"2025-09-22T22:53:02.695049+07:00\", \"id\": \"b3f7ecde-7cab-4af6-b687-73b3b63e894e\", \"metadata\": null, \"status\": \"published\", \"type\": \"html\", \"updated_at\": \"2025-09-22T22:53:02.695049+07:00\", \"value\": {\"html\": \"<p>Sample HTML content</p>\"}}, {\"category\": \"contract.type.text\", \"created_at\": \"2025-09-22T22:53:02.666184+07:00\", \"id\": \"0202a8a2-80be-4115-a610-c3dce642f24b\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:02.666184+07:00\", \"value\": {\"text\": \"Sample text content\"}}, {\"category\": \"contract.test.item\", \"created_at\": \"2025-09-22T22:53:01.944792+07:00\", \"id\": \"6b2e03cb-7a1c-431f-8b7c-552d65e0e1be\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:01.944792+07:00\", \"value\": {\"text\": \"Contract test content\"}}, {\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:52:59.339575+07:00\", \"id\": \"8d011f99-e6ca-4b76-ab1d-032c4954a148\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:59.339575+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, …], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 71}, \"total\": 71}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"uuid.string.test\", \"created_at\": \"2025-09-22T22:53:05.248788+07:00\", \"id\": \"b6e5705e-62e0-453c-bb88-fd1d991a3405\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:05.248788+07:00\", \"value\": {\"text\": \"Test content for UUID/string compatibility\"}}, {\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:53:05.203755+07:00\", \"id\": \"820d84a0-eca4-4855-99fc-61456ffac897\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:05.203755+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, {\"category\": \"navigation.main.title\", \"created_at\": \"2025-09-22T22:53:05.124689+07:00\", \"id\": \"c60a5eb1-bce7-4638-901b-0f919794512b\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:05.124689+07:00\", \"value\": {\"text\": \"Content 3\"}}, {\"category\": \"auth.signup.title\", \"created_at\": \"2025-09-22T22:53:05.112171+07:00\", \"id\": \"946f80f4-ce84-4e0b-bd53-f3bfad168666\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:05.112171+07:00\", \"value\": {\"text\": \"Content 2\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:53:05.095035+07:00\", \"id\": \"639df3a4-7e62-40ee-9dc7-08dbdd689aff\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:05.095035+07:00\", \"value\": {\"text\": \"Content 1\"}}, {\"category\": \"contract.type.json\", \"created_at\": \"2025-09-22T22:53:02.724965+07:00\", \"id\": \"e49f7744-db57-4a79-af84-d7977c6ee046\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:53:02.724965+07:00\", \"value\": {\"data\": {\"key\": \"value\", \"number\": 42}}}, {\"category\": \"contract.type.html\", \"created_at\": \"2025-09-22T22:53:02.695049+07:00\", \"id\": \"b3f7ecde-7cab-4af6-b687-73b3b63e894e\", \"metadata\": null, \"status\": \"published\", \"type\": \"html\", \"updated_at\": \"2025-09-22T22:53:02.695049+07:00\", \"value\": {\"html\": \"<p>Sample HTML content</p>\"}}, {\"category\": \"contract.type.text\", \"created_at\": \"2025-09-22T22:53:02.666184+07:00\", \"id\": \"0202a8a2-80be-4115-a610-c3dce642f24b\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:02.666184+07:00\", \"value\": {\"text\": \"Sample text content\"}}, {\"category\": \"contract.test.item\", \"created_at\": \"2025-09-22T22:53:01.944792+07:00\", \"id\": \"6b2e03cb-7a1c-431f-8b7c-552d65e0e1be\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:01.944792+07:00\", \"value\": {\"text\": \"Contract test content\"}}, {\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:52:59.339575+07:00\", \"id\": \"8d011f99-e6ca-4b76-ab1d-032c4954a148\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:59.339575+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, …], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 71}, \"total\": 71}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:41:27",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 27,
                              "line": 41
                            },
                            "snippet": "  39 |         expect(data.data).toHaveProperty('items');\n  40 |         expect(data.data).toHaveProperty('total');\n> 41 |         expect(data.data).toHaveProperty('page');\n     |                           ^\n  42 |         expect(data.data).toHaveProperty('limit');\n  43 |         expect(Array.isArray(data.data.items)).toBe(true);\n  44 |       }"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 27,
                                "line": 41
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"page\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"items\": [{\"category\": \"uuid.string.test\", \"created_at\": \"2025-09-22T22:53:05.248788+07:00\", \"id\": \"b6e5705e-62e0-453c-bb88-fd1d991a3405\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:05.248788+07:00\", \"value\": {\"text\": \"Test content for UUID/string compatibility\"}}, {\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:53:05.203755+07:00\", \"id\": \"820d84a0-eca4-4855-99fc-61456ffac897\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:05.203755+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, {\"category\": \"navigation.main.title\", \"created_at\": \"2025-09-22T22:53:05.124689+07:00\", \"id\": \"c60a5eb1-bce7-4638-901b-0f919794512b\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:05.124689+07:00\", \"value\": {\"text\": \"Content 3\"}}, {\"category\": \"auth.signup.title\", \"created_at\": \"2025-09-22T22:53:05.112171+07:00\", \"id\": \"946f80f4-ce84-4e0b-bd53-f3bfad168666\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:05.112171+07:00\", \"value\": {\"text\": \"Content 2\"}}, {\"category\": \"auth.signin.title\", \"created_at\": \"2025-09-22T22:53:05.095035+07:00\", \"id\": \"639df3a4-7e62-40ee-9dc7-08dbdd689aff\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:05.095035+07:00\", \"value\": {\"text\": \"Content 1\"}}, {\"category\": \"contract.type.json\", \"created_at\": \"2025-09-22T22:53:02.724965+07:00\", \"id\": \"e49f7744-db57-4a79-af84-d7977c6ee046\", \"metadata\": null, \"status\": \"published\", \"type\": \"json\", \"updated_at\": \"2025-09-22T22:53:02.724965+07:00\", \"value\": {\"data\": {\"key\": \"value\", \"number\": 42}}}, {\"category\": \"contract.type.html\", \"created_at\": \"2025-09-22T22:53:02.695049+07:00\", \"id\": \"b3f7ecde-7cab-4af6-b687-73b3b63e894e\", \"metadata\": null, \"status\": \"published\", \"type\": \"html\", \"updated_at\": \"2025-09-22T22:53:02.695049+07:00\", \"value\": {\"html\": \"<p>Sample HTML content</p>\"}}, {\"category\": \"contract.type.text\", \"created_at\": \"2025-09-22T22:53:02.666184+07:00\", \"id\": \"0202a8a2-80be-4115-a610-c3dce642f24b\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:02.666184+07:00\", \"value\": {\"text\": \"Sample text content\"}}, {\"category\": \"contract.test.item\", \"created_at\": \"2025-09-22T22:53:01.944792+07:00\", \"id\": \"6b2e03cb-7a1c-431f-8b7c-552d65e0e1be\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:53:01.944792+07:00\", \"value\": {\"text\": \"Contract test content\"}}, {\"category\": \"not-a-uuid-but-has-dashes\", \"created_at\": \"2025-09-22T22:52:59.339575+07:00\", \"id\": \"8d011f99-e6ca-4b76-ab1d-032c4954a148\", \"metadata\": null, \"status\": \"published\", \"type\": \"text\", \"updated_at\": \"2025-09-22T22:52:59.339575+07:00\", \"value\": {\"text\": \"This should be accessible by string key\"}}, …], \"pagination\": {\"offset\": 0, \"page\": 0, \"page_size\": 20, \"total\": 71}, \"total\": 71}\u001b[39m\n\n  39 |         expect(data.data).toHaveProperty('items');\n  40 |         expect(data.data).toHaveProperty('total');\n> 41 |         expect(data.data).toHaveProperty('page');\n     |                           ^\n  42 |         expect(data.data).toHaveProperty('limit');\n  43 |         expect(Array.isArray(data.data.items)).toBe(true);\n  44 |       }\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:41:27"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:53:06.309Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 27,
                            "line": 41
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-bb597ac68519d30c8133",
                  "file": "content-contract.spec.ts",
                  "line": 14,
                  "column": 9
                },
                {
                  "title": "should return correct structure for single content item",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Google Chrome",
                      "projectName": "Google Chrome",
                      "results": [
                        {
                          "workerIndex": 43,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 434,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"category\": \"contract.test.item\",\u001b[22m\n\u001b[32m-   \"created_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[32m-   \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\",\u001b[39m\n\u001b[31m+   \"created_at\": \"2025-09-22T22:53:06.782447+07:00\",\u001b[39m\n\u001b[31m+   \"id\": \"9db1ad6d-256e-45e4-b657-a5e193627c3a\",\u001b[39m\n\u001b[2m    \"metadata\": null,\u001b[22m\n\u001b[2m    \"status\": \"published\",\u001b[22m\n\u001b[2m    \"type\": \"text\",\u001b[22m\n\u001b[32m-   \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[31m+   \"updated_at\": \"2025-09-22T22:53:06.782447+07:00\",\u001b[39m\n\u001b[2m    \"value\": Object {\u001b[22m\n\u001b[2m      \"text\": \"Contract test content\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"category\": \"contract.test.item\",\u001b[22m\n\u001b[32m-   \"created_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[32m-   \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\",\u001b[39m\n\u001b[31m+   \"created_at\": \"2025-09-22T22:53:06.782447+07:00\",\u001b[39m\n\u001b[31m+   \"id\": \"9db1ad6d-256e-45e4-b657-a5e193627c3a\",\u001b[39m\n\u001b[2m    \"metadata\": null,\u001b[22m\n\u001b[2m    \"status\": \"published\",\u001b[22m\n\u001b[2m    \"type\": \"text\",\u001b[22m\n\u001b[32m-   \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[31m+   \"updated_at\": \"2025-09-22T22:53:06.782447+07:00\",\u001b[39m\n\u001b[2m    \"value\": Object {\u001b[22m\n\u001b[2m      \"text\": \"Contract test content\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:90:32",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 32,
                              "line": 90
                            },
                            "snippet": "  88 |\n  89 |       // Both responses should have identical structure\n> 90 |       expect(getByIdData.data).toEqual(getByKeyData.data);\n     |                                ^\n  91 |     });\n  92 |\n  93 |     test('should validate content value structure by type', async ({ request }) => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 32,
                                "line": 90
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 3\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"category\": \"contract.test.item\",\u001b[22m\n\u001b[32m-   \"created_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[32m-   \"id\": \"03a864dc-fa27-4474-9ade-e3de3bb99676\",\u001b[39m\n\u001b[31m+   \"created_at\": \"2025-09-22T22:53:06.782447+07:00\",\u001b[39m\n\u001b[31m+   \"id\": \"9db1ad6d-256e-45e4-b657-a5e193627c3a\",\u001b[39m\n\u001b[2m    \"metadata\": null,\u001b[22m\n\u001b[2m    \"status\": \"published\",\u001b[22m\n\u001b[2m    \"type\": \"text\",\u001b[22m\n\u001b[32m-   \"updated_at\": \"2025-09-22T22:52:17.255952+07:00\",\u001b[39m\n\u001b[31m+   \"updated_at\": \"2025-09-22T22:53:06.782447+07:00\",\u001b[39m\n\u001b[2m    \"value\": Object {\u001b[22m\n\u001b[2m      \"text\": \"Contract test content\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  }\u001b[22m\n\n  88 |\n  89 |       // Both responses should have identical structure\n> 90 |       expect(getByIdData.data).toEqual(getByKeyData.data);\n     |                                ^\n  91 |     });\n  92 |\n  93 |     test('should validate content value structure by type', async ({ request }) => {\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:90:32"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:53:06.411Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 32,
                            "line": 90
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-427dadf78aa652a8bc37",
                  "file": "content-contract.spec.ts",
                  "line": 47,
                  "column": 9
                },
                {
                  "title": "should validate content value structure by type",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Google Chrome",
                      "projectName": "Google Chrome",
                      "results": [
                        {
                          "workerIndex": 44,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 472,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:53:07.784Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-70ac59811b31dcf2675c",
                  "file": "content-contract.spec.ts",
                  "line": 93,
                  "column": 9
                }
              ]
            },
            {
              "title": "Error Response Contract",
              "file": "content-contract.spec.ts",
              "line": 131,
              "column": 8,
              "specs": [
                {
                  "title": "should return consistent error structure",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 3,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 473,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:139:28",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 28,
                              "line": 139
                            },
                            "snippet": "  137 |       const notFoundData = await notFoundResponse.json();\n  138 |       expect(notFoundData).toHaveProperty('status');\n> 139 |       expect(notFoundData).toHaveProperty('error');\n      |                            ^\n  140 |       expect(notFoundData.status).toBe('error');\n  141 |       expect(notFoundData.error).toContain('not found');\n  142 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 28,
                                "line": 139
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m\n\n  137 |       const notFoundData = await notFoundResponse.json();\n  138 |       expect(notFoundData).toHaveProperty('status');\n> 139 |       expect(notFoundData).toHaveProperty('error');\n      |                            ^\n  140 |       expect(notFoundData.status).toBe('error');\n  141 |       expect(notFoundData.error).toContain('not found');\n  142 |     });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:139:28"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:16.721Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 28,
                            "line": 139
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-f911f251f047a9ed0658",
                  "file": "content-contract.spec.ts",
                  "line": 132,
                  "column": 9
                },
                {
                  "title": "should return validation error structure",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 4,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 457,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:157:27",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 27,
                              "line": 157
                            },
                            "snippet": "  155 |\n  156 |       expect(invalidData).toHaveProperty('status');\n> 157 |       expect(invalidData).toHaveProperty('error');\n      |                           ^\n  158 |       expect(invalidData.status).toBe('error');\n  159 |     });\n  160 |   });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 27,
                                "line": 157
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m\n\n  155 |\n  156 |       expect(invalidData).toHaveProperty('status');\n> 157 |       expect(invalidData).toHaveProperty('error');\n      |                           ^\n  158 |       expect(invalidData.status).toBe('error');\n  159 |     });\n  160 |   });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:157:27"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:18.316Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 27,
                            "line": 157
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-920315ff4e72b6bc5145",
                  "file": "content-contract.spec.ts",
                  "line": 144,
                  "column": 9
                },
                {
                  "title": "should return consistent error structure",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 8,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 454,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:139:28",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 28,
                              "line": 139
                            },
                            "snippet": "  137 |       const notFoundData = await notFoundResponse.json();\n  138 |       expect(notFoundData).toHaveProperty('status');\n> 139 |       expect(notFoundData).toHaveProperty('error');\n      |                            ^\n  140 |       expect(notFoundData.status).toBe('error');\n  141 |       expect(notFoundData.error).toContain('not found');\n  142 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 28,
                                "line": 139
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m\n\n  137 |       const notFoundData = await notFoundResponse.json();\n  138 |       expect(notFoundData).toHaveProperty('status');\n> 139 |       expect(notFoundData).toHaveProperty('error');\n      |                            ^\n  140 |       expect(notFoundData.status).toBe('error');\n  141 |       expect(notFoundData.error).toContain('not found');\n  142 |     });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:139:28"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:20.380Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 28,
                            "line": 139
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-fb4716ff22d045498427",
                  "file": "content-contract.spec.ts",
                  "line": 132,
                  "column": 9
                },
                {
                  "title": "should return validation error structure",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 10,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 433,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:157:27",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 27,
                              "line": 157
                            },
                            "snippet": "  155 |\n  156 |       expect(invalidData).toHaveProperty('status');\n> 157 |       expect(invalidData).toHaveProperty('error');\n      |                           ^\n  158 |       expect(invalidData.status).toBe('error');\n  159 |     });\n  160 |   });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 27,
                                "line": 157
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m\n\n  155 |\n  156 |       expect(invalidData).toHaveProperty('status');\n> 157 |       expect(invalidData).toHaveProperty('error');\n      |                           ^\n  158 |       expect(invalidData.status).toBe('error');\n  159 |     });\n  160 |   });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:157:27"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:20.462Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 27,
                            "line": 157
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-956e287b09ed1646f5cb",
                  "file": "content-contract.spec.ts",
                  "line": 144,
                  "column": 9
                },
                {
                  "title": "should return consistent error structure",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 17,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 414,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:139:28",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 28,
                              "line": 139
                            },
                            "snippet": "  137 |       const notFoundData = await notFoundResponse.json();\n  138 |       expect(notFoundData).toHaveProperty('status');\n> 139 |       expect(notFoundData).toHaveProperty('error');\n      |                            ^\n  140 |       expect(notFoundData.status).toBe('error');\n  141 |       expect(notFoundData.error).toContain('not found');\n  142 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 28,
                                "line": 139
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m\n\n  137 |       const notFoundData = await notFoundResponse.json();\n  138 |       expect(notFoundData).toHaveProperty('status');\n> 139 |       expect(notFoundData).toHaveProperty('error');\n      |                            ^\n  140 |       expect(notFoundData.status).toBe('error');\n  141 |       expect(notFoundData.error).toContain('not found');\n  142 |     });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:139:28"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:26.882Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 28,
                            "line": 139
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-e974b5bbf8b7296699b1",
                  "file": "content-contract.spec.ts",
                  "line": 132,
                  "column": 9
                },
                {
                  "title": "should return validation error structure",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 18,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 451,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:157:27",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 27,
                              "line": 157
                            },
                            "snippet": "  155 |\n  156 |       expect(invalidData).toHaveProperty('status');\n> 157 |       expect(invalidData).toHaveProperty('error');\n      |                           ^\n  158 |       expect(invalidData.status).toBe('error');\n  159 |     });\n  160 |   });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 27,
                                "line": 157
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m\n\n  155 |\n  156 |       expect(invalidData).toHaveProperty('status');\n> 157 |       expect(invalidData).toHaveProperty('error');\n      |                           ^\n  158 |       expect(invalidData.status).toBe('error');\n  159 |     });\n  160 |   });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:157:27"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:28.794Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 27,
                            "line": 157
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-0482a7cd8b41384c1fcf",
                  "file": "content-contract.spec.ts",
                  "line": 144,
                  "column": 9
                },
                {
                  "title": "should return consistent error structure",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 24,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 459,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:139:28",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 28,
                              "line": 139
                            },
                            "snippet": "  137 |       const notFoundData = await notFoundResponse.json();\n  138 |       expect(notFoundData).toHaveProperty('status');\n> 139 |       expect(notFoundData).toHaveProperty('error');\n      |                            ^\n  140 |       expect(notFoundData.status).toBe('error');\n  141 |       expect(notFoundData.error).toContain('not found');\n  142 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 28,
                                "line": 139
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m\n\n  137 |       const notFoundData = await notFoundResponse.json();\n  138 |       expect(notFoundData).toHaveProperty('status');\n> 139 |       expect(notFoundData).toHaveProperty('error');\n      |                            ^\n  140 |       expect(notFoundData.status).toBe('error');\n  141 |       expect(notFoundData.error).toContain('not found');\n  142 |     });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:139:28"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:35.031Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 28,
                            "line": 139
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-8882213c48361f3cc43f",
                  "file": "content-contract.spec.ts",
                  "line": 132,
                  "column": 9
                },
                {
                  "title": "should return validation error structure",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 23,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 28,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:157:27",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 27,
                              "line": 157
                            },
                            "snippet": "  155 |\n  156 |       expect(invalidData).toHaveProperty('status');\n> 157 |       expect(invalidData).toHaveProperty('error');\n      |                           ^\n  158 |       expect(invalidData.status).toBe('error');\n  159 |     });\n  160 |   });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 27,
                                "line": 157
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m\n\n  155 |\n  156 |       expect(invalidData).toHaveProperty('status');\n> 157 |       expect(invalidData).toHaveProperty('error');\n      |                           ^\n  158 |       expect(invalidData.status).toBe('error');\n  159 |     });\n  160 |   });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:157:27"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:35.227Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 27,
                            "line": 157
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-618d48c9440a7bf3c1a9",
                  "file": "content-contract.spec.ts",
                  "line": 144,
                  "column": 9
                },
                {
                  "title": "should return consistent error structure",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 30,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 40,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:139:28",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 28,
                              "line": 139
                            },
                            "snippet": "  137 |       const notFoundData = await notFoundResponse.json();\n  138 |       expect(notFoundData).toHaveProperty('status');\n> 139 |       expect(notFoundData).toHaveProperty('error');\n      |                            ^\n  140 |       expect(notFoundData.status).toBe('error');\n  141 |       expect(notFoundData.error).toContain('not found');\n  142 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 28,
                                "line": 139
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m\n\n  137 |       const notFoundData = await notFoundResponse.json();\n  138 |       expect(notFoundData).toHaveProperty('status');\n> 139 |       expect(notFoundData).toHaveProperty('error');\n      |                            ^\n  140 |       expect(notFoundData.status).toBe('error');\n  141 |       expect(notFoundData.error).toContain('not found');\n  142 |     });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:139:28"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:45.464Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 28,
                            "line": 139
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-ddbedd884ebdec708ef1",
                  "file": "content-contract.spec.ts",
                  "line": 132,
                  "column": 9
                },
                {
                  "title": "should return validation error structure",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 31,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 395,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:157:27",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 27,
                              "line": 157
                            },
                            "snippet": "  155 |\n  156 |       expect(invalidData).toHaveProperty('status');\n> 157 |       expect(invalidData).toHaveProperty('error');\n      |                           ^\n  158 |       expect(invalidData.status).toBe('error');\n  159 |     });\n  160 |   });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 27,
                                "line": 157
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m\n\n  155 |\n  156 |       expect(invalidData).toHaveProperty('status');\n> 157 |       expect(invalidData).toHaveProperty('error');\n      |                           ^\n  158 |       expect(invalidData.status).toBe('error');\n  159 |     });\n  160 |   });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:157:27"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:47.075Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 27,
                            "line": 157
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-656287e271a2b70f9ce5",
                  "file": "content-contract.spec.ts",
                  "line": 144,
                  "column": 9
                },
                {
                  "title": "should return consistent error structure",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Microsoft Edge",
                      "projectName": "Microsoft Edge",
                      "results": [
                        {
                          "workerIndex": 38,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 369,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:139:28",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 28,
                              "line": 139
                            },
                            "snippet": "  137 |       const notFoundData = await notFoundResponse.json();\n  138 |       expect(notFoundData).toHaveProperty('status');\n> 139 |       expect(notFoundData).toHaveProperty('error');\n      |                            ^\n  140 |       expect(notFoundData.status).toBe('error');\n  141 |       expect(notFoundData.error).toContain('not found');\n  142 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 28,
                                "line": 139
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m\n\n  137 |       const notFoundData = await notFoundResponse.json();\n  138 |       expect(notFoundData).toHaveProperty('status');\n> 139 |       expect(notFoundData).toHaveProperty('error');\n      |                            ^\n  140 |       expect(notFoundData.status).toBe('error');\n  141 |       expect(notFoundData.error).toContain('not found');\n  142 |     });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:139:28"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:53:03.229Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 28,
                            "line": 139
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-56f82a282963ee5e6a43",
                  "file": "content-contract.spec.ts",
                  "line": 132,
                  "column": 9
                },
                {
                  "title": "should return validation error structure",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Microsoft Edge",
                      "projectName": "Microsoft Edge",
                      "results": [
                        {
                          "workerIndex": 37,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 22,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:157:27",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 27,
                              "line": 157
                            },
                            "snippet": "  155 |\n  156 |       expect(invalidData).toHaveProperty('status');\n> 157 |       expect(invalidData).toHaveProperty('error');\n      |                           ^\n  158 |       expect(invalidData.status).toBe('error');\n  159 |     });\n  160 |   });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 27,
                                "line": 157
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m\n\n  155 |\n  156 |       expect(invalidData).toHaveProperty('status');\n> 157 |       expect(invalidData).toHaveProperty('error');\n      |                           ^\n  158 |       expect(invalidData.status).toBe('error');\n  159 |     });\n  160 |   });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:157:27"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:53:02.757Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 27,
                            "line": 157
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-1bfadfdda5f79cad506f",
                  "file": "content-contract.spec.ts",
                  "line": 144,
                  "column": 9
                },
                {
                  "title": "should return consistent error structure",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Google Chrome",
                      "projectName": "Google Chrome",
                      "results": [
                        {
                          "workerIndex": 45,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 362,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:139:28",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 28,
                              "line": 139
                            },
                            "snippet": "  137 |       const notFoundData = await notFoundResponse.json();\n  138 |       expect(notFoundData).toHaveProperty('status');\n> 139 |       expect(notFoundData).toHaveProperty('error');\n      |                            ^\n  140 |       expect(notFoundData.status).toBe('error');\n  141 |       expect(notFoundData.error).toContain('not found');\n  142 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 28,
                                "line": 139
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"record not found\", \"message\": \"Content not found\", \"status\": \"error\"}\u001b[39m\n\n  137 |       const notFoundData = await notFoundResponse.json();\n  138 |       expect(notFoundData).toHaveProperty('status');\n> 139 |       expect(notFoundData).toHaveProperty('error');\n      |                            ^\n  140 |       expect(notFoundData.status).toBe('error');\n  141 |       expect(notFoundData.error).toContain('not found');\n  142 |     });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:139:28"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:53:07.945Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 28,
                            "line": 139
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-c9ad80c5c822bd0f0cba",
                  "file": "content-contract.spec.ts",
                  "line": 132,
                  "column": 9
                },
                {
                  "title": "should return validation error structure",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Google Chrome",
                      "projectName": "Google Chrome",
                      "results": [
                        {
                          "workerIndex": 44,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 19,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:157:27",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 27,
                              "line": 157
                            },
                            "snippet": "  155 |\n  156 |       expect(invalidData).toHaveProperty('status');\n> 157 |       expect(invalidData).toHaveProperty('error');\n      |                           ^\n  158 |       expect(invalidData.status).toBe('error');\n  159 |     });\n  160 |   });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 27,
                                "line": 157
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"error\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"details\": \"json: cannot unmarshal string into Go struct field CreateContentRequest.value of type models.ContentValue\", \"message\": \"Validation failed\", \"status\": \"error\"}\u001b[39m\n\n  155 |\n  156 |       expect(invalidData).toHaveProperty('status');\n> 157 |       expect(invalidData).toHaveProperty('error');\n      |                           ^\n  158 |       expect(invalidData.status).toBe('error');\n  159 |     });\n  160 |   });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:157:27"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:53:08.296Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 27,
                            "line": 157
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-53585bf92cd59acca27b",
                  "file": "content-contract.spec.ts",
                  "line": 144,
                  "column": 9
                }
              ]
            },
            {
              "title": "Frontend-Backend Data Contract",
              "file": "content-contract.spec.ts",
              "line": 162,
              "column": 8,
              "specs": [
                {
                  "title": "should validate that frontend can properly process backend responses",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 5,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 36389,
                          "error": {
                            "message": "TimeoutError: page.waitForLoadState: Timeout 30000ms exceeded.",
                            "stack": "TimeoutError: page.waitForLoadState: Timeout 30000ms exceeded.\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:200:18",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 18,
                              "line": 200
                            },
                            "snippet": "  198 |\n  199 |       await page.goto('http://localhost:3000');\n> 200 |       await page.waitForLoadState('networkidle');\n      |                  ^\n  201 |\n  202 |       // Should not have forEach errors\n  203 |       const forEachErrors = errors.filter(error => error.includes('forEach is not a function'));"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 18,
                                "line": 200
                              },
                              "message": "TimeoutError: page.waitForLoadState: Timeout 30000ms exceeded.\n\n  198 |\n  199 |       await page.goto('http://localhost:3000');\n> 200 |       await page.waitForLoadState('networkidle');\n      |                  ^\n  201 |\n  202 |       // Should not have forEach errors\n  203 |       const forEachErrors = errors.filter(error => error.includes('forEach is not a function'));\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:200:18"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:18.263Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/weerawat/Tchat/apps/web/test-results/content-contract-Content-S-8c902-y-process-backend-responses-chromium/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/weerawat/Tchat/apps/web/test-results/content-contract-Content-S-8c902-y-process-backend-responses-chromium/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 18,
                            "line": 200
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-c5362f76c1864e751d9d",
                  "file": "content-contract.spec.ts",
                  "line": 163,
                  "column": 9
                },
                {
                  "title": "should validate content batch loading contract",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 1,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 76,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:17.413Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-de8d366bec582179e1a9",
                  "file": "content-contract.spec.ts",
                  "line": 214,
                  "column": 9
                },
                {
                  "title": "should validate that frontend can properly process backend responses",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 3749,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m0\u001b[39m\nReceived length: \u001b[31m1\u001b[39m\nReceived array:  \u001b[31m[\"Warning: validateDOMNesting(...): <div> cannot appear as a descendant of <p>.\u001b[39m\n\u001b[31mdiv\u001b[39m\n\u001b[31mp\u001b[39m\n\u001b[31mdiv\u001b[39m\n\u001b[31mdiv\u001b[39m\n\u001b[31mdiv\u001b[39m\n\u001b[31mAuthScreen@http://localhost:3000/src/components/AuthScreen.tsx?t=1758555767292:56:27\u001b[39m\n\u001b[31mApp@http://localhost:3000/src/App.tsx?t=1758555767292:62:22\u001b[39m\n\u001b[31mProvider@http://localhost:3000/node_modules/.vite/deps/chunk-S6KV2J5U.js?v=ccfcd4a9:923:53\"]\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m0\u001b[39m\nReceived length: \u001b[31m1\u001b[39m\nReceived array:  \u001b[31m[\"Warning: validateDOMNesting(...): <div> cannot appear as a descendant of <p>.\u001b[39m\n\u001b[31mdiv\u001b[39m\n\u001b[31mp\u001b[39m\n\u001b[31mdiv\u001b[39m\n\u001b[31mdiv\u001b[39m\n\u001b[31mdiv\u001b[39m\n\u001b[31mAuthScreen@http://localhost:3000/src/components/AuthScreen.tsx?t=1758555767292:56:27\u001b[39m\n\u001b[31mApp@http://localhost:3000/src/App.tsx?t=1758555767292:62:22\u001b[39m\n\u001b[31mProvider@http://localhost:3000/node_modules/.vite/deps/chunk-S6KV2J5U.js?v=ccfcd4a9:923:53\"]\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:211:30",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 30,
                              "line": 211
                            },
                            "snippet": "  209 |         !error.includes('API Error')\n  210 |       );\n> 211 |       expect(criticalErrors).toHaveLength(0);\n      |                              ^\n  212 |     });\n  213 |\n  214 |     test('should validate content batch loading contract', async ({ request }) => {"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 30,
                                "line": 211
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m0\u001b[39m\nReceived length: \u001b[31m1\u001b[39m\nReceived array:  \u001b[31m[\"Warning: validateDOMNesting(...): <div> cannot appear as a descendant of <p>.\u001b[39m\n\u001b[31mdiv\u001b[39m\n\u001b[31mp\u001b[39m\n\u001b[31mdiv\u001b[39m\n\u001b[31mdiv\u001b[39m\n\u001b[31mdiv\u001b[39m\n\u001b[31mAuthScreen@http://localhost:3000/src/components/AuthScreen.tsx?t=1758555767292:56:27\u001b[39m\n\u001b[31mApp@http://localhost:3000/src/App.tsx?t=1758555767292:62:22\u001b[39m\n\u001b[31mProvider@http://localhost:3000/node_modules/.vite/deps/chunk-S6KV2J5U.js?v=ccfcd4a9:923:53\"]\u001b[39m\n\n  209 |         !error.includes('API Error')\n  210 |       );\n> 211 |       expect(criticalErrors).toHaveLength(0);\n      |                              ^\n  212 |     });\n  213 |\n  214 |     test('should validate content batch loading contract', async ({ request }) => {\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:211:30"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:22.086Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/weerawat/Tchat/apps/web/test-results/content-contract-Content-S-8c902-y-process-backend-responses-firefox/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/weerawat/Tchat/apps/web/test-results/content-contract-Content-S-8c902-y-process-backend-responses-firefox/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 30,
                            "line": 211
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-eba663c5b9f9071fc29a",
                  "file": "content-contract.spec.ts",
                  "line": 163,
                  "column": 9
                },
                {
                  "title": "should validate content batch loading contract",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 434,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:22.095Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-47c1d30b6546c5c04f12",
                  "file": "content-contract.spec.ts",
                  "line": 214,
                  "column": 9
                },
                {
                  "title": "should validate that frontend can properly process backend responses",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 31981,
                          "error": {
                            "message": "TimeoutError: page.waitForLoadState: Timeout 30000ms exceeded.\n=========================== logs ===========================\n  \"domcontentloaded\" event fired\n============================================================",
                            "stack": "TimeoutError: page.waitForLoadState: Timeout 30000ms exceeded.\n=========================== logs ===========================\n  \"domcontentloaded\" event fired\n============================================================\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:200:18",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 18,
                              "line": 200
                            },
                            "snippet": "  198 |\n  199 |       await page.goto('http://localhost:3000');\n> 200 |       await page.waitForLoadState('networkidle');\n      |                  ^\n  201 |\n  202 |       // Should not have forEach errors\n  203 |       const forEachErrors = errors.filter(error => error.includes('forEach is not a function'));"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 18,
                                "line": 200
                              },
                              "message": "TimeoutError: page.waitForLoadState: Timeout 30000ms exceeded.\n=========================== logs ===========================\n  \"domcontentloaded\" event fired\n============================================================\n\n  198 |\n  199 |       await page.goto('http://localhost:3000');\n> 200 |       await page.waitForLoadState('networkidle');\n      |                  ^\n  201 |\n  202 |       // Should not have forEach errors\n  203 |       const forEachErrors = errors.filter(error => error.includes('forEach is not a function'));\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:200:18"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:27.418Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/weerawat/Tchat/apps/web/test-results/content-contract-Content-S-8c902-y-process-backend-responses-webkit/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/weerawat/Tchat/apps/web/test-results/content-contract-Content-S-8c902-y-process-backend-responses-webkit/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 18,
                            "line": 200
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-6002e062970ce438ad50",
                  "file": "content-contract.spec.ts",
                  "line": 163,
                  "column": 9
                },
                {
                  "title": "should validate content batch loading contract",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 19,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 589,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:30.119Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-a37f685704209feffa21",
                  "file": "content-contract.spec.ts",
                  "line": 214,
                  "column": 9
                },
                {
                  "title": "should validate that frontend can properly process backend responses",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 34747,
                          "error": {
                            "message": "TimeoutError: page.waitForLoadState: Timeout 30000ms exceeded.",
                            "stack": "TimeoutError: page.waitForLoadState: Timeout 30000ms exceeded.\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:200:18",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 18,
                              "line": 200
                            },
                            "snippet": "  198 |\n  199 |       await page.goto('http://localhost:3000');\n> 200 |       await page.waitForLoadState('networkidle');\n      |                  ^\n  201 |\n  202 |       // Should not have forEach errors\n  203 |       const forEachErrors = errors.filter(error => error.includes('forEach is not a function'));"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 18,
                                "line": 200
                              },
                              "message": "TimeoutError: page.waitForLoadState: Timeout 30000ms exceeded.\n\n  198 |\n  199 |       await page.goto('http://localhost:3000');\n> 200 |       await page.waitForLoadState('networkidle');\n      |                  ^\n  201 |\n  202 |       // Should not have forEach errors\n  203 |       const forEachErrors = errors.filter(error => error.includes('forEach is not a function'));\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:200:18"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:36.550Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/weerawat/Tchat/apps/web/test-results/content-contract-Content-S-8c902-y-process-backend-responses-Mobile-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/weerawat/Tchat/apps/web/test-results/content-contract-Content-S-8c902-y-process-backend-responses-Mobile-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 18,
                            "line": 200
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-11d7d6cb739d02befdd0",
                  "file": "content-contract.spec.ts",
                  "line": 163,
                  "column": 9
                },
                {
                  "title": "should validate content batch loading contract",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 26,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 569,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:36.681Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-898f9b20f89279e570f1",
                  "file": "content-contract.spec.ts",
                  "line": 214,
                  "column": 9
                },
                {
                  "title": "should validate that frontend can properly process backend responses",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 32,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 31694,
                          "error": {
                            "message": "TimeoutError: page.waitForLoadState: Timeout 30000ms exceeded.\n=========================== logs ===========================\n  \"domcontentloaded\" event fired\n============================================================",
                            "stack": "TimeoutError: page.waitForLoadState: Timeout 30000ms exceeded.\n=========================== logs ===========================\n  \"domcontentloaded\" event fired\n============================================================\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:200:18",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 18,
                              "line": 200
                            },
                            "snippet": "  198 |\n  199 |       await page.goto('http://localhost:3000');\n> 200 |       await page.waitForLoadState('networkidle');\n      |                  ^\n  201 |\n  202 |       // Should not have forEach errors\n  203 |       const forEachErrors = errors.filter(error => error.includes('forEach is not a function'));"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 18,
                                "line": 200
                              },
                              "message": "TimeoutError: page.waitForLoadState: Timeout 30000ms exceeded.\n=========================== logs ===========================\n  \"domcontentloaded\" event fired\n============================================================\n\n  198 |\n  199 |       await page.goto('http://localhost:3000');\n> 200 |       await page.waitForLoadState('networkidle');\n      |                  ^\n  201 |\n  202 |       // Should not have forEach errors\n  203 |       const forEachErrors = errors.filter(error => error.includes('forEach is not a function'));\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:200:18"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:48.586Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/weerawat/Tchat/apps/web/test-results/content-contract-Content-S-8c902-y-process-backend-responses-Mobile-Safari/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/weerawat/Tchat/apps/web/test-results/content-contract-Content-S-8c902-y-process-backend-responses-Mobile-Safari/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 18,
                            "line": 200
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-eeb5be6c0bcab1d8d879",
                  "file": "content-contract.spec.ts",
                  "line": 163,
                  "column": 9
                },
                {
                  "title": "should validate content batch loading contract",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 33,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 426,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:57.014Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-3fceffceecff60e1ed8e",
                  "file": "content-contract.spec.ts",
                  "line": 214,
                  "column": 9
                },
                {
                  "title": "should validate that frontend can properly process backend responses",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Microsoft Edge",
                      "projectName": "Microsoft Edge",
                      "results": [
                        {
                          "workerIndex": 39,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 6,
                          "error": {
                            "message": "Error: browserType.launch: Chromium distribution 'msedge' is not found at /Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge\nRun \"npx playwright install msedge\"",
                            "stack": "Error: browserType.launch: Chromium distribution 'msedge' is not found at /Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge\nRun \"npx playwright install msedge\""
                          },
                          "errors": [
                            {
                              "message": "Error: browserType.launch: Chromium distribution 'msedge' is not found at /Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge\nRun \"npx playwright install msedge\""
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:53:03.767Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-4def89afaab257767bef",
                  "file": "content-contract.spec.ts",
                  "line": 163,
                  "column": 9
                },
                {
                  "title": "should validate content batch loading contract",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Microsoft Edge",
                      "projectName": "Microsoft Edge",
                      "results": [
                        {
                          "workerIndex": 40,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 412,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:53:04.738Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-d0c37e952395f6b9c46d",
                  "file": "content-contract.spec.ts",
                  "line": 214,
                  "column": 9
                },
                {
                  "title": "should validate that frontend can properly process backend responses",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Google Chrome",
                      "projectName": "Google Chrome",
                      "results": [
                        {
                          "workerIndex": 46,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 33278,
                          "error": {
                            "message": "TimeoutError: page.waitForLoadState: Timeout 30000ms exceeded.",
                            "stack": "TimeoutError: page.waitForLoadState: Timeout 30000ms exceeded.\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:200:18",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 18,
                              "line": 200
                            },
                            "snippet": "  198 |\n  199 |       await page.goto('http://localhost:3000');\n> 200 |       await page.waitForLoadState('networkidle');\n      |                  ^\n  201 |\n  202 |       // Should not have forEach errors\n  203 |       const forEachErrors = errors.filter(error => error.includes('forEach is not a function'));"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 18,
                                "line": 200
                              },
                              "message": "TimeoutError: page.waitForLoadState: Timeout 30000ms exceeded.\n\n  198 |\n  199 |       await page.goto('http://localhost:3000');\n> 200 |       await page.waitForLoadState('networkidle');\n      |                  ^\n  201 |\n  202 |       // Should not have forEach errors\n  203 |       const forEachErrors = errors.filter(error => error.includes('forEach is not a function'));\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:200:18"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:53:09.487Z",
                          "annotations": [],
                          "attachments": [
                            {
                              "name": "screenshot",
                              "contentType": "image/png",
                              "path": "/Users/weerawat/Tchat/apps/web/test-results/content-contract-Content-S-8c902-y-process-backend-responses-Google-Chrome/test-failed-1.png"
                            },
                            {
                              "name": "video",
                              "contentType": "video/webm",
                              "path": "/Users/weerawat/Tchat/apps/web/test-results/content-contract-Content-S-8c902-y-process-backend-responses-Google-Chrome/video.webm"
                            }
                          ],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 18,
                            "line": 200
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-c6b9d22f8d210c37fcbc",
                  "file": "content-contract.spec.ts",
                  "line": 163,
                  "column": 9
                },
                {
                  "title": "should validate content batch loading contract",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Google Chrome",
                      "projectName": "Google Chrome",
                      "results": [
                        {
                          "workerIndex": 47,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 488,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:53:09.476Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-e805b4cf0679a78eb658",
                  "file": "content-contract.spec.ts",
                  "line": 214,
                  "column": 9
                }
              ]
            },
            {
              "title": "UUID vs String Key Contract",
              "file": "content-contract.spec.ts",
              "line": 252,
              "column": 8,
              "specs": [
                {
                  "title": "should handle both UUID and string key formats consistently",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 2,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 36,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:17.443Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-e0172ff4c0d2cb32e710",
                  "file": "content-contract.spec.ts",
                  "line": 253,
                  "column": 9
                },
                {
                  "title": "should validate that invalid UUIDs fall back to string key lookup",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "chromium",
                      "projectName": "chromium",
                      "results": [
                        {
                          "workerIndex": 2,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 30,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:17.495Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-28e95eb6937176f607ff",
                  "file": "content-contract.spec.ts",
                  "line": 285,
                  "column": 9
                },
                {
                  "title": "should handle both UUID and string key formats consistently",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 9,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 108,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"19be419f-99b2-4531-8efe-59dce7aaf185\"\u001b[39m\nReceived: \u001b[31m\"6caac246-e211-4f13-a5d6-305a7bb847ca\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"19be419f-99b2-4531-8efe-59dce7aaf185\"\u001b[39m\nReceived: \u001b[31m\"6caac246-e211-4f13-a5d6-305a7bb847ca\"\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:280:32",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 32,
                              "line": 280
                            },
                            "snippet": "  278 |       const stringData = await stringResponse.json();\n  279 |\n> 280 |       expect(uuidData.data.id).toBe(stringData.data.id);\n      |                                ^\n  281 |       expect(uuidData.data.category).toBe(stringData.data.category);\n  282 |       expect(uuidData.data.value).toEqual(stringData.data.value);\n  283 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 32,
                                "line": 280
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"19be419f-99b2-4531-8efe-59dce7aaf185\"\u001b[39m\nReceived: \u001b[31m\"6caac246-e211-4f13-a5d6-305a7bb847ca\"\u001b[39m\n\n  278 |       const stringData = await stringResponse.json();\n  279 |\n> 280 |       expect(uuidData.data.id).toBe(stringData.data.id);\n      |                                ^\n  281 |       expect(uuidData.data.category).toBe(stringData.data.category);\n  282 |       expect(uuidData.data.value).toEqual(stringData.data.value);\n  283 |     });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:280:32"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:21.029Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 32,
                            "line": 280
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-47dc4f6058d649a34d9a",
                  "file": "content-contract.spec.ts",
                  "line": 253,
                  "column": 9
                },
                {
                  "title": "should validate that invalid UUIDs fall back to string key lookup",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "firefox",
                      "projectName": "firefox",
                      "results": [
                        {
                          "workerIndex": 13,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 424,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:22.197Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-2a7d96445fe0fb6a08f6",
                  "file": "content-contract.spec.ts",
                  "line": 285,
                  "column": 9
                },
                {
                  "title": "should handle both UUID and string key formats consistently",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 20,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 608,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"19be419f-99b2-4531-8efe-59dce7aaf185\"\u001b[39m\nReceived: \u001b[31m\"6b7d8d12-e180-47ea-b22d-22e90ffd709e\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"19be419f-99b2-4531-8efe-59dce7aaf185\"\u001b[39m\nReceived: \u001b[31m\"6b7d8d12-e180-47ea-b22d-22e90ffd709e\"\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:280:32",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 32,
                              "line": 280
                            },
                            "snippet": "  278 |       const stringData = await stringResponse.json();\n  279 |\n> 280 |       expect(uuidData.data.id).toBe(stringData.data.id);\n      |                                ^\n  281 |       expect(uuidData.data.category).toBe(stringData.data.category);\n  282 |       expect(uuidData.data.value).toEqual(stringData.data.value);\n  283 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 32,
                                "line": 280
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"19be419f-99b2-4531-8efe-59dce7aaf185\"\u001b[39m\nReceived: \u001b[31m\"6b7d8d12-e180-47ea-b22d-22e90ffd709e\"\u001b[39m\n\n  278 |       const stringData = await stringResponse.json();\n  279 |\n> 280 |       expect(uuidData.data.id).toBe(stringData.data.id);\n      |                                ^\n  281 |       expect(uuidData.data.category).toBe(stringData.data.category);\n  282 |       expect(uuidData.data.value).toEqual(stringData.data.value);\n  283 |     });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:280:32"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:30.917Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 32,
                            "line": 280
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-21620dc80222c6d600a2",
                  "file": "content-contract.spec.ts",
                  "line": 253,
                  "column": 9
                },
                {
                  "title": "should validate that invalid UUIDs fall back to string key lookup",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "webkit",
                      "projectName": "webkit",
                      "results": [
                        {
                          "workerIndex": 19,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 122,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:30.766Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-03c78f8cf2321bf3d124",
                  "file": "content-contract.spec.ts",
                  "line": 285,
                  "column": 9
                },
                {
                  "title": "should handle both UUID and string key formats consistently",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 26,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 174,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"19be419f-99b2-4531-8efe-59dce7aaf185\"\u001b[39m\nReceived: \u001b[31m\"9726a473-3e66-43bf-8f0a-6275238ff3b2\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"19be419f-99b2-4531-8efe-59dce7aaf185\"\u001b[39m\nReceived: \u001b[31m\"9726a473-3e66-43bf-8f0a-6275238ff3b2\"\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:280:32",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 32,
                              "line": 280
                            },
                            "snippet": "  278 |       const stringData = await stringResponse.json();\n  279 |\n> 280 |       expect(uuidData.data.id).toBe(stringData.data.id);\n      |                                ^\n  281 |       expect(uuidData.data.category).toBe(stringData.data.category);\n  282 |       expect(uuidData.data.value).toEqual(stringData.data.value);\n  283 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 32,
                                "line": 280
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"19be419f-99b2-4531-8efe-59dce7aaf185\"\u001b[39m\nReceived: \u001b[31m\"9726a473-3e66-43bf-8f0a-6275238ff3b2\"\u001b[39m\n\n  278 |       const stringData = await stringResponse.json();\n  279 |\n> 280 |       expect(uuidData.data.id).toBe(stringData.data.id);\n      |                                ^\n  281 |       expect(uuidData.data.category).toBe(stringData.data.category);\n  282 |       expect(uuidData.data.value).toEqual(stringData.data.value);\n  283 |     });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:280:32"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:37.390Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 32,
                            "line": 280
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-728b4706bf87a278bd59",
                  "file": "content-contract.spec.ts",
                  "line": 253,
                  "column": 9
                },
                {
                  "title": "should validate that invalid UUIDs fall back to string key lookup",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Chrome",
                      "projectName": "Mobile Chrome",
                      "results": [
                        {
                          "workerIndex": 27,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 395,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:39.290Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-11e49f6156b862a2dd52",
                  "file": "content-contract.spec.ts",
                  "line": 285,
                  "column": 9
                },
                {
                  "title": "should handle both UUID and string key formats consistently",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 33,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 110,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"19be419f-99b2-4531-8efe-59dce7aaf185\"\u001b[39m\nReceived: \u001b[31m\"33afbdcf-92b4-4663-b1cf-62ef0a9f77e0\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"19be419f-99b2-4531-8efe-59dce7aaf185\"\u001b[39m\nReceived: \u001b[31m\"33afbdcf-92b4-4663-b1cf-62ef0a9f77e0\"\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:280:32",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 32,
                              "line": 280
                            },
                            "snippet": "  278 |       const stringData = await stringResponse.json();\n  279 |\n> 280 |       expect(uuidData.data.id).toBe(stringData.data.id);\n      |                                ^\n  281 |       expect(uuidData.data.category).toBe(stringData.data.category);\n  282 |       expect(uuidData.data.value).toEqual(stringData.data.value);\n  283 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 32,
                                "line": 280
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"19be419f-99b2-4531-8efe-59dce7aaf185\"\u001b[39m\nReceived: \u001b[31m\"33afbdcf-92b4-4663-b1cf-62ef0a9f77e0\"\u001b[39m\n\n  278 |       const stringData = await stringResponse.json();\n  279 |\n> 280 |       expect(uuidData.data.id).toBe(stringData.data.id);\n      |                                ^\n  281 |       expect(uuidData.data.category).toBe(stringData.data.category);\n  282 |       expect(uuidData.data.value).toEqual(stringData.data.value);\n  283 |     });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:280:32"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:57.497Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 32,
                            "line": 280
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-c498caa58394420f8a1b",
                  "file": "content-contract.spec.ts",
                  "line": 253,
                  "column": 9
                },
                {
                  "title": "should validate that invalid UUIDs fall back to string key lookup",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Mobile Safari",
                      "projectName": "Mobile Safari",
                      "results": [
                        {
                          "workerIndex": 34,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 426,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:52:58.931Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-735133fabd0a431cecb5",
                  "file": "content-contract.spec.ts",
                  "line": 285,
                  "column": 9
                },
                {
                  "title": "should handle both UUID and string key formats consistently",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Microsoft Edge",
                      "projectName": "Microsoft Edge",
                      "results": [
                        {
                          "workerIndex": 41,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 429,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m19be419f-99b2-4531-8efe-59dce7aaf18\u001b[27m5\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7mb6e5705e-62e0-453c-bb88-fd1d991a340\u001b[27m5\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m19be419f-99b2-4531-8efe-59dce7aaf18\u001b[27m5\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7mb6e5705e-62e0-453c-bb88-fd1d991a340\u001b[27m5\"\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:280:32",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 32,
                              "line": 280
                            },
                            "snippet": "  278 |       const stringData = await stringResponse.json();\n  279 |\n> 280 |       expect(uuidData.data.id).toBe(stringData.data.id);\n      |                                ^\n  281 |       expect(uuidData.data.category).toBe(stringData.data.category);\n  282 |       expect(uuidData.data.value).toEqual(stringData.data.value);\n  283 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 32,
                                "line": 280
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m19be419f-99b2-4531-8efe-59dce7aaf18\u001b[27m5\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7mb6e5705e-62e0-453c-bb88-fd1d991a340\u001b[27m5\"\u001b[39m\n\n  278 |       const stringData = await stringResponse.json();\n  279 |\n> 280 |       expect(uuidData.data.id).toBe(stringData.data.id);\n      |                                ^\n  281 |       expect(uuidData.data.category).toBe(stringData.data.category);\n  282 |       expect(uuidData.data.value).toEqual(stringData.data.value);\n  283 |     });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:280:32"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:53:04.861Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 32,
                            "line": 280
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-e38e8d409a469a09ee41",
                  "file": "content-contract.spec.ts",
                  "line": 253,
                  "column": 9
                },
                {
                  "title": "should validate that invalid UUIDs fall back to string key lookup",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Microsoft Edge",
                      "projectName": "Microsoft Edge",
                      "results": [
                        {
                          "workerIndex": 40,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 24,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:53:05.188Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-1155165edcf7d1ab6ea5",
                  "file": "content-contract.spec.ts",
                  "line": 285,
                  "column": 9
                },
                {
                  "title": "should handle both UUID and string key formats consistently",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Google Chrome",
                      "projectName": "Google Chrome",
                      "results": [
                        {
                          "workerIndex": 47,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 65,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"19be419f-99b2-4531-8efe-59dce7aaf185\"\u001b[39m\nReceived: \u001b[31m\"dbd5cd7a-4af2-46a7-bb56-d6b01707e239\"\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"19be419f-99b2-4531-8efe-59dce7aaf185\"\u001b[39m\nReceived: \u001b[31m\"dbd5cd7a-4af2-46a7-bb56-d6b01707e239\"\u001b[39m\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:280:32",
                            "location": {
                              "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                              "column": 32,
                              "line": 280
                            },
                            "snippet": "  278 |       const stringData = await stringResponse.json();\n  279 |\n> 280 |       expect(uuidData.data.id).toBe(stringData.data.id);\n      |                                ^\n  281 |       expect(uuidData.data.category).toBe(stringData.data.category);\n  282 |       expect(uuidData.data.value).toEqual(stringData.data.value);\n  283 |     });"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                                "column": 32,
                                "line": 280
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"19be419f-99b2-4531-8efe-59dce7aaf185\"\u001b[39m\nReceived: \u001b[31m\"dbd5cd7a-4af2-46a7-bb56-d6b01707e239\"\u001b[39m\n\n  278 |       const stringData = await stringResponse.json();\n  279 |\n> 280 |       expect(uuidData.data.id).toBe(stringData.data.id);\n      |                                ^\n  281 |       expect(uuidData.data.category).toBe(stringData.data.category);\n  282 |       expect(uuidData.data.value).toEqual(stringData.data.value);\n  283 |     });\n    at /Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts:280:32"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:53:09.997Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/weerawat/Tchat/apps/web/tests/e2e/content-contract.spec.ts",
                            "column": 32,
                            "line": 280
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-af96e1d56b33d33dd9b3",
                  "file": "content-contract.spec.ts",
                  "line": 253,
                  "column": 9
                },
                {
                  "title": "should validate that invalid UUIDs fall back to string key lookup",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 60000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "Google Chrome",
                      "projectName": "Google Chrome",
                      "results": [
                        {
                          "workerIndex": 48,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 394,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-22T15:53:11.921Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "ff8d9c7abf60fb1bf9da-9d55253c838dabb04b00",
                  "file": "content-contract.spec.ts",
                  "line": 285,
                  "column": 9
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-09-22T15:52:15.409Z",
    "duration": 101710.867,
    "expected": 23,
    "skipped": 0,
    "unexpected": 40,
    "flaky": 0
  }
}